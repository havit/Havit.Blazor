@attribute [Route("/components/" + nameof(HxInputNumber))]

<ComponentApiDoc Type="typeof(HxInputNumber<TValue>)">

    <DocHeading Title="Basic usage" />
    <Demo Type="typeof(HxInputNumber_Demo)" Tabs="false" />

    <DocHeading Title="Input modes" />
    <p><code>InputMode</code> is a hint to browsers as to the type of virtual keyboard configuration to use when editing.</p>
    <p>
        If not set (neither with parameter, <code>Settings</code> nor <code>HxInputNumber.Defaults</code>),
        the <code>InputMode.Numeric</code> will be used for inputs with <code>Decimals</code> equal to <code>0</code>.
    </p>
    <DocAlert Type="DocAlertType.Info">
        Note: We do not default to <code>InputMode.Decimal</code> for inputs with <code>Decimals</code> greater than <code>0</code>
        because users with keyboard locale not matching the application locale won't be able to enter a decimal point
        (which is <kbd>,</kbd> in some locales and <kbd>.</kbd> in others). Feel free to set the <code>InputMode</code> on your own as needed.
    </DocAlert>
    <Demo Type="typeof(HxInputNumber_Demo_InputMode)" />

	<DocHeading Title="Input types" />
	<p>
		<code>Type</code> parameter allows you to change the <code>&lt;input type="..."&gt;</code> of the underlying HTML element.
	</p>
	<Demo Type="typeof(HxInputNumber_Demo_InputType)" />
	<p>
		<code>InputType.Text</code> is the default value and is used when <code>Type</code> is not set.
		<ul>
			<li>Respects your application culture (<code>CultureInfo.CurrentCulture</code>)</li>
			<li>Does not prevent non-numeric input (unless combined with additional JavaScript)</li>
			<li>Allows for enhanced UX tricks (eg., automatic replacement of comma/decimal separators)</li>
		</ul>
	</p>
	<p>
		<code>InputType.Number</code> is a browser-provided input type that restricts input to numeric values.
		<ul>
			<li><strong>Does not respect your application culture, uses user's browser locale.</strong></li>
			<li>Prevents non-numeric input.</li>
			<li>Uses only browser-provided UX.</li>
		</ul>
	</p>

	<DocHeading Id="SelectOnFocus" Title="Select on focus" />
	<p>The <code>SelectOnFocus</code> parameter allows you to determine whether all the content within the input field is automatically selected when it receives focus.</p>
	<Demo Type="typeof(HxInputNumber_Demo_SelectOnFocus)" />

</ComponentApiDoc>