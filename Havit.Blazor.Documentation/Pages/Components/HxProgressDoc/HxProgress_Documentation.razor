@attribute [Route("/components/" + nameof(HxProgress))]
@attribute [Route("/components/" + nameof(HxProgressBar))]

<ComponentApiDoc Type="typeof(HxProgress)">
    <DocHeading Title="Basic usage" />
    <Demo Type="typeof(HxProgress_Demo)" Tabs="false" />

    <DocHeading Title="Labels" />
    <Demo Type="typeof(HxProgress_Demo_Labels)" Tabs="false" />

    <DocHeading Title="Height" />
    <Demo Type="typeof(HxProgress_Demo_Height)" Tabs="false" />

    <DocHeading Title="Backgrounds" />
    <Demo Type="typeof(HxProgress_Demo_Backgrounds)" />

    <DocHeading Title="MultipleBars" />
    <Demo Type="typeof(HxProgress_Demo_MultipleBars)" Tabs="false" />

    <DocHeading Title="Striped" />
    <Demo Type="typeof(HxProgress_Demo_Striped)" />

    <DocHeading Title="Animated stripes" />
    <p>When the parameter <code>HxProgressBar.Animated</code> is set to <code>true</code>, stripes are automatically enabled and animated.</p>
    <Demo Type="typeof(HxProgress_Demo_AnimatedStripes)" Tabs="false" />

    <DocHeading Title="Setting parameters" />
    <p>Some parameters can be set for all progress bars at once on the <code>HxProgress</code> component. Inherited values can be overridden on the child components.</p>
    <Demo Type="typeof(HxProgress_Demo_SettingParameters)" Tabs="false" />

    <DocHeading Title="Scale" />
    <p>You can set a scale for the progress bar, for example from <code>-100</code> to <code>100</code> as shown below. Supplied values are normalized according to the <code>MinValue</code> and <code>MaxValue</code> set. The default values are <code>0</code> and <code>100</code>.</p>
    <Demo Type="typeof(HxProgress_Demo_Scales)" Tabs="false" />

    <DocHeading Title="Interactive" />
    <p>The progress value can be easily changed at runtime. When that occurs, the progress bar updates with an animation.</p>
    <Demo Type="typeof(HxProgress_Demo_Interactive)" />
</ComponentApiDoc>

<ComponentApiDoc Type="typeof(HxProgressBar)" />
