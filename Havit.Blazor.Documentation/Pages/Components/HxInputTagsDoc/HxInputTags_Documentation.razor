@attribute [Route("/components/" + nameof(HxInputTags))]

<ComponentApiDoc Type="typeof(HxInputTags)">
    <MainContent>
        <DocAlert Type="DocAlertType.Warning">
            Due to a breaking change in Bootstrap 5.2, the keyboard navigation stopped working for dropdowns triggered from <code>input</code> (the <code>Up</code> and <code>Down</code> keys).
            As an experimental feature, we have added our own keyboard navigation routines to the affected components. This might be subject to future change.
            You can check the progress here: <a href="https://github.com/havit/Havit.Blazor/issues/348">https://github.com/havit/Havit.Blazor/issues/348</a>.
        </DocAlert>

        <DocHeading Title="Basic usage" />
        <Demo Type="typeof(HxInputTags_Demo_Basic)" />

        <DocHeading Title="Static suggestions" />
        <p>
            To offer a fixed list of suggestions (similar to <code>HxSelect</code>), set up the <code>DataProvider</code> to return those values (regardless of the input)
            and use <code>@nameof(HxInputTags.SuggestDelay)="0"</code> together with <code>@nameof(HxInputTags.SuggestMinimumLength)="0"</code>.
        </p>
        <Demo Type="typeof(HxInputTags_Demo_StaticSuggestions)" />

        <DocHeading Title="No suggestions" />
        <p>If you don't want to use any suggestions and let the user add tags manually, simply leave the <code>DataProvider</code> unset (<code>null</code>).</p>
        <Demo Type="typeof(HxInputTags_Demo_NoSuggestions)" />

        <DocHeading Title="Restricted tags" />
        <p>If you want to restrict tags to suggested items only, set <code>@nameof(HxInputTags.AllowCustomTags)</code> to <code>false</code>.</p>
        <DocAlert>
            The current implementation of @nameof(HxInputTags) for <code>AllowCustomTags="false"</code> only allows adding tags from suggestions (dropdown).
            Keyboard support might be implemented in the future (we have to check the added tags with the DataProvider to apply the restriction).
        </DocAlert>
        <Demo Type="typeof(HxInputTags_Demo_AllowCustomTags)" />

        <DocHeading Title="Colors" />
        <p>Use <code>TagBackgroundColor</code> and <code>TagTextColor</code> via <code>TagBadgeSettings</code> to adjust the colors.</p>
        <Demo Type="typeof(HxInputTags_Demo_Colors)" />

        <DocHeading Title="Naked" />
        <p>Consider enabling <code>@nameof(HxInputTags.ShowAddButton)</code> when using <code>@nameof(HxInputTags.Naked)</code>.</p>
        <Demo Type="typeof(HxInputTags_Demo_Naked)" />

        <DocHeading Title="Naked sizes" Level="3" />
        <p>Use the <code>InputSize</code> parameter.</p>
        <Demo Type="typeof(HxInputTags_Demo_Naked_InputSize)" />

        <DocHeading Title="Add-button text" />
        <p>You might want to set a custom <code>@nameof(HxInputTags.AddButtonText)</code>, especially for <code>@nameof(HxInputTags.Naked)</code> input.</p>
        <Demo Type="typeof(HxInputTags_Demo_Naked_AddButtonText)" />

        <DocHeading Title="Disabled" />
        <p>You can disable the input by setting <code>Enabled="false"</code>.</p>
        <Demo Type="typeof(HxInputTags_Demo_Disabled)" />

        <DocHeading Title="Input groups" />
        <p>The <code>HxInputTags</code> component supports input groups. Learn more about them <a href="https://havit.blazor.eu/components/Inputs#InputGroups">here</a>.</p>
        <Demo Type="typeof(HxInputTags_Demo_InputGroups)" />
        <p>Simple text can be used as an input group, or you can create a custom input group template.</p>
        <Demo Type="typeof(HxInputTags_Demo_InputGroupTemplates)" />
    </MainContent>

    <CssVariables>
        <ComponentApiDocCssVariable Name="--hx-input-tags-tag-margin" Default="0 .25rem 0 0">
            Margin of tags.
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-input-width" Default="3em">
            Input width.
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-input-placeholder-color" Default="var(--bs-secondary-color)">
            Color of the placeholder input.
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-naked-font-size-lg" Default="1.25em">
            Naked font size large.
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-naked-font-size-sm" Default=".875em">
            Naked font size small.
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-control-focused-box-shadow" Default="0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25)">
            Box shadow of the control when focused.
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-control-focused-border-color" Default="rgba(var(--bs-primary-rgb), .3)">
            Border color of the control when focused (as the color is not exposed via CSS variables from Bootstrap, we use rgba derivative from --bs-primary-rgb and the color is not 100% accurate).
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-add-button-text-margin" Default="rgba(var(--bs-primary-rgb), .3)">
            Margin of an add button text.
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-add-button-disabled-opacity" Default=".65">
            Opacity of disabled add button.
        </ComponentApiDocCssVariable>
        <ComponentApiDocCssVariable Name="--hx-input-tags-dropdown-item-highlighted-background-color" Default="var(--bs-tertiary-bg)">
            Background color of a dropdown item when highlighted.
        </ComponentApiDocCssVariable>
    </CssVariables>
</ComponentApiDoc>