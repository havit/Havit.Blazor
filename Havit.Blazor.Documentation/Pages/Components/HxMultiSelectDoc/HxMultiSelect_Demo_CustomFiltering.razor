@inject IDemoDataService DemoDataService

<HxMultiSelect Label="Employees"
			   TItem="EmployeeDto"
			   TValue="int"
			   Data="@employees"
			   @bind-Value="selectedEmployeeIds"
			   TextSelector="@(p => p.Name)"
			   ValueSelector="@(p => p.Id)"
			   NullDataText="Loading employees..."
			   AllowFiltering="true"
               ClearFilterOnHide="false"
               FilterPredicate="IsRecordIncluded"
               EmptyText="-select employees-">
    <FilterEmptyResultTemplate>
        <HxIcon Icon="BootstrapIcon.EmojiFrown" /> No employees found
    </FilterEmptyResultTemplate>
</HxMultiSelect>

<p class="mt-3">Selected employees (IDs): @String.Join(", ", selectedEmployeeIds.Select(e => e.ToString()))</p>

@code {
    private IEnumerable<EmployeeDto> employees;
    private List<int> selectedEmployeeIds = new();

    protected override async Task OnInitializedAsync()
    {
        employees = await DemoDataService.GetAllEmployeesAsync();
    }

    private bool IsRecordIncluded(EmployeeDto employee, string filterQuery)
    {
		return employee.Name.Contains(filterQuery, StringComparison.OrdinalIgnoreCase)
			|| employee.Email.Contains(filterQuery, StringComparison.OrdinalIgnoreCase);
    }
}