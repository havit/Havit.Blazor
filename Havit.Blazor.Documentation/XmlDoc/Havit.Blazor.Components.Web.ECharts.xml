<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Havit.Blazor.Components.Web.ECharts</name>
    </assembly>
    <members>
        <member name="T:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs">
            <summary>
            Represents the arguments for the <see cref="P:Havit.Blazor.Components.Web.ECharts.HxEChart.OnClick" /> event callback.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.ComponentType">
            <summary>
            Type of the component to which the clicked glyph belongs, e.g. "series", "markLine", "markPoint", "markArea".
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.SeriesType">
            <summary>
            Series type (make sense when <see cref="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.ComponentType"/> is 'series'), e.g. "line", "bar", "pie", ...
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.SeriesIndex">
            <summary>
            Series index in incoming <c>Options.Series</c> (make sense when <see cref="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.ComponentType"/> is "series").
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.SeriesName">
            <summary>
            Series name (make sense when <see cref="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.ComponentType"/> is "series").
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.Name">
            <summary>
            Data name, category name.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.DataIndex">
            <summary>
            Data index in incoming data array.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.Value">
            <summary>
            Incoming data value. Use <see cref="M:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.GetValue``1"/> to extract the value as the specified type.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.GetValue``1">
            <summary>
            Returns the <see cref="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.Value"/> as the specified type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.EChartClickEventArgs.TargetType">
            <summary>
            Indicates what type of click event is it.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.ECharts.HxEChart">
            <summary>
            Component for convenient rendering of Apache ECharts.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.HxEChart.ChartId">
            <summary>
            Unique identifier for the HTML element representing the chart.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.HxEChart.Options">
            <summary>
            Options for the chart. See <a href="https://echarts.apache.org/en/option.html">ECharts Option</a> for more details.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.HxEChart.Height">
            <summary>
            The height of the chart. Default is <c>400px</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.HxEChart.AutoResize">
            <summary>
            Indicates whether the chart should automatically resize. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.HxEChart.OnClick">
            <summary>
            Invoked when the chart is clicked.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.ECharts.HxEChart.JSFunc">
            <summary>
            Represents a JavaScript function to be passed to the ECharts options.
            </summary>
            <param name="RawCode">The raw JavaScript code.</param>
        </member>
        <member name="M:Havit.Blazor.Components.Web.ECharts.HxEChart.JSFunc.#ctor(System.String)">
            <summary>
            Represents a JavaScript function to be passed to the ECharts options.
            </summary>
            <param name="RawCode">The raw JavaScript code.</param>
        </member>
        <member name="P:Havit.Blazor.Components.Web.ECharts.HxEChart.JSFunc.RawCode">
            <summary>The raw JavaScript code.</summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.ECharts.HxEChartsSetup.RenderEChartsJavaScriptReference">
            <summary>it
            Renders the <c>&lt;script&gt;</c> tag that references the corresponding Apache ECharts JavaScript.<br/>
            To be used in <c>App.razor</c> as <c>@((MarkupString)HxSetup.RenderEChartsJavaScriptReference())</c>.
            </summary>
            <remarks>
            We do not want to use TagHelper or HTML Helper here as we do not want to introduce a dependency on server-side ASP.NET Core (MVC/Razor) to our library (a separate NuGet package would have to be created).
            </remarks>
        </member>
    </members>
</doc>
