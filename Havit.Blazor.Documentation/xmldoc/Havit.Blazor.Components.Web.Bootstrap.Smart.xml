<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Havit.Blazor.Components.Web.Bootstrap.Smart</name>
    </assembly>
    <members>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox">
            <summary>
            Smart ComboBox is an AI upgrade to the traditional combo box.<br />
            Traditional combo boxes suggest values only based on exact substring matches.
            Smart ComboBox upgrades this by suggesting semantic matches
            (i.e., options with the most closely related meanings).
            This is much more helpful for users who don't know/remember
            the exact predefined string they are looking for.<br />
            <code>HxSmartComboBox</code> derives from <see href="https://github.com/dotnet-smartcomponents/smartcomponents/blob/main/docs/smart-combobox.md">SmartComboBox</see>,
            a component created by the Microsoft Blazor team.
            It extends the original component with Bootstrap styling and Hx-component features.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputFile"/> and derived components.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputText">https://havit.blazor.eu/components/HxInputText</see>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descendants (use a separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Defaults"/>, overridden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.GetSettings">
            <summary>
            Returns an optional set of component settings.
            </summary>
            <remarks>
            Similar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.Settings"/> in component descendants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.Url">
            <summary>
            API endpoint that Smart ComboBox will call to get suggestions.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.MaxSuggestions">
            <summary>
            Maximum number of suggestions offered. Default is <code>10</code>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.SimilarityThreshold">
            <summary>
            Minimal similarity coefficient for an item to be offered. Default is <code>0.5</code>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.MaxLength">
            <summary>
            The maximum number of characters (UTF-16 code units) that the user can enter.<br />
            If the parameter value isn't specified, the <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute"/> of the <c>Value</c> is checked and used.<br />
            If not specified either, the user can enter an unlimited number of characters.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.InputMode">
            <summary>
            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br/>
            The default is <c>null</c> (not set).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.Placeholder">
            <summary>
            Placeholder for the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartComboBox.LabelType">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.Bootstrap.LabelType" />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton">
            <summary>
            Smart Paste is an intelligent AI-powered app feature that fills out forms automatically using data
            from the user's clipboard. You can use this with any existing form in your web app.<br />
            <code>HxSmartPasteButton</code> derives from <see href="https://github.com/dotnet-smartcomponents/smartcomponents/blob/main/docs/smart-paste.md">SmartPasteButton</see>,
            a component created by the Microsoft Blazor team.
            It extends the original component with Bootstrap styling and Hx-component features.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton"/>.
            Please note, the defaults are not shared with <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descendants (use a separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Defaults"/>, overridden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.GetSettings">
            <summary>
            Returns an optional set of component settings.
            </summary>
            <remarks>
            Similar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Settings"/> in component descendants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Text">
            <summary>
            Text of the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Icon">
            <summary>
            Icon to render into the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.IconPlacement">
            <summary>
            Position of the icon within the button. The default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start" /> (configurable through <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Color">
            <summary>
            Bootstrap button style - theme color.<br />
            The default is taken from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Defaults"/> (<see cref="F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None"/> if not customized).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Size">
            <summary>
            Button size. The default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Outline">
            <summary>
            <see href="https://getbootstrap.com/docs/5.3/components/buttons/#outline-buttons">Bootstrap "outline" button</see> style.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.CssClass">
            <summary>
            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.IconCssClass">
            <summary>
            CSS class to be rendered with the button icon.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.Spinner">
            <summary>
            Enables or disables the spinner. <br/>
            Leave <c>null</c> if you want automated spinner.
            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartPasteButton.CoreCssClass">
            <summary>
            Gets the basic CSS class(es) which get rendered to every single button. <br/>
            The default implementation is <c>"hx-button btn"</c>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea">
            <summary>
            Smart TextArea is an AI upgrade to the traditional textarea. It provides suggested autocompletions
            to whole sentences based on its configuration and what the user is currently typing.<br />
            <code>HxSmartTextArea</code> derives from <see href="https://github.com/dotnet-smartcomponents/smartcomponents/blob/main/docs/smart-textarea.md">SmartTextArea</see>,
            a component created by the Microsoft Blazor team.
            It extends the original component with Bootstrap styling and Hx-component features.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputFile"/> and derived components.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputText">https://havit.blazor.eu/components/HxInputText</see>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descendants (use a separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Defaults"/>, overridden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.GetSettings">
            <summary>
            Returns an optional set of component settings.
            </summary>
            <remarks>
            Similar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.Settings"/> in component descendants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.UserRole">
            <summary>
            Describes who is typing and for what reason, optionally giving other contextual information.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.UserPhrases">
            <summary>
            Helps the language model reply using your preferred tone/voice, common phrases,
            and give any information you wish about policies, URLs, or anything else that may
            be relevant to incorporate into the suggested completions.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.Parameters">
            <summary>
            An arbitrary string you can use to communicate any state or context information
            you want into the inference backend (it arrives as
            a property on the <c>SmartTextAreaConfig</c>.
            </summary>
            <remarks>
            This parameter will most likely be renamed or removed in the future.
            https://github.com/dotnet-smartcomponents/smartcomponents/issues/10
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.MaxLength">
            <summary>
            The maximum number of characters (UTF-16 code units) that the user can enter.<br />
            If the parameter value isn't specified, the <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute"/> of the <c>Value</c> is checked and used.<br />
            If not specified either, the user can enter an unlimited number of characters.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.InputMode">
            <summary>
            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br/>
            The default is <c>null</c> (not set).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.Placeholder">
            <summary>
            Placeholder for the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Smart.HxSmartTextArea.LabelType">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.Bootstrap.LabelType" />
        </member>
    </members>
</doc>
