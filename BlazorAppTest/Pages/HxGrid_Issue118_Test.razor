@page "/HxGrid_Issue118_Test"
@using System.Globalization

<h1>Issue 118</h1>

<HxGrid TItem="CultureInfo" TableContainerCssClass="table-responsive" DataProvider="ClientSideProcessingDataProvider" PageSize="3" @ref="grid">
    <Columns>
        <HxGridColumn TItem="CultureInfo" HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true" />
        <HxGridColumn TItem="CultureInfo" HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)" SortKeySelector="@(item => item.DisplayName)" />
        <HxGridColumn TItem="CultureInfo" HeaderText="Name" ItemTextSelector="@(item => item.Name)" SortKeySelector="@(item => item.Name)" />
        <HxGridColumn TItem="CultureInfo" HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)" SortKeySelector="@(item => item.EnglishName)" />
        <HxContextMenuGridColumn Context="item">
            <HxContextMenu PopperStrategy="PopperStrategy.Fixed">@* <-- PopperStrategy.Fixed is the fix *@
                <h1>@item.DisplayName</h1>
                <HxContextMenuItem Text="Delete" Icon="BootstrapIcon.Trash" OnClick="() => DeleteItem(item)" />
                <HxContextMenuItem Text="Clone" Icon="BootstrapIcon.Plus" OnClick="() => CloneItem(item)" />
            </HxContextMenu>
        </HxContextMenuGridColumn>
    </Columns>
</HxGrid>

@code {
    private List<CultureInfo> localCultureInfos = CultureInfo.GetCultures(CultureTypes.AllCultures).ToList();
    private HxGrid<CultureInfo> grid;

    private Task<GridDataProviderResult<CultureInfo>> ClientSideProcessingDataProvider(GridDataProviderRequest<CultureInfo> request)
    {
        return Task.FromResult(request.ApplyTo(localCultureInfos));
    }

    private async Task DeleteItem(CultureInfo item)
    {
        localCultureInfos.Remove(item);
        await grid.RefreshDataAsync();
    }

    private async Task CloneItem(CultureInfo item)
    {
        localCultureInfos.Add(item);
        await grid.RefreshDataAsync();
    }
}
