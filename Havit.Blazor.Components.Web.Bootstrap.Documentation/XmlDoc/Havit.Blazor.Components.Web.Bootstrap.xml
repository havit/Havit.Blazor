<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Havit.Blazor.Components.Web.Bootstrap</name>
    </assembly>
    <members>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxAccordion">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/accordion/">Bootstrap accordion</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxAccordion">https://havit.blazor.eu/components/HxAccordion</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.CssClass">
            <summary>
            Additional CSS classes for the accordion container.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemId">
            <summary>
            ID of the expanded item.
            Do not use constant value as it reverts the accordion to that item on every roundtrip. Use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.InitialExpandedItemId"/> to set the initial state.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.StayOpen">
            <summary>
            Set to <c>true</c> to make accordion items stay open when another item is opened.
            Default is <c>false</c>, openning another item collapses current item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.InitialExpandedItemId">
            <summary>
            ID of the item you want to expand at the very beginning (overwrites <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemId"/> if set).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem">
            <summary>
            Single item for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxAccordion"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.HeaderTemplate">
            <summary>
            Clickable header (always visible).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.BodyTemplate">
            <summary>
            Body (collapsible).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.Id">
            <summary>
            ID of the item (<see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordion.ExpandedItemId"/>). (Gets generated GUID if not set.)
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.OnExpanded">
            <summary>
            Raised after the transition to this item (the animation is finished).
            Is not raised for the initial rendering even if the item is not collapsed (no transition happened).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.InvokeOnExpandedAsync(System.String)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.OnExpanded"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.OnCollapsed">
            <summary>
            Raised after the transition from this item (the animation is finished).
            Is not raised for the initial rendering even if the item is collapsed (no transition happened).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.InvokeOnCollapsedAsync(System.String)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.OnCollapsed"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.CssClass">
            <summary>
            Additional CSS class(es) for the accordion item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.HeaderCssClass">
            <summary>
            Additional CSS class(es) for the accordion item header (<c>.accordion-header</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.BodyCssClass">
            <summary>
            Additional CSS class(es) for the accordion item body (<c>.accordion-body</c>).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.ExpandAsync">
            <summary>
            Expands the item.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAccordionItem.CollapseAsync">
            <summary>
            Collapses the item.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxAlert">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/alerts/">Bootstrap alert</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxAlert">https://havit.blazor.eu/components/HxAlert</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAlert.Color">
            <summary>
            Alert color (background). Required.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAlert.Dismissible">
            <summary>
            Shows the Close button and allows dissmissing of the alert.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAlert.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.BadgeSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.BadgeSettings.Color">
            <summary>
            Badge color (background).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.BadgeSettings.TextColor">
            <summary>
            Color of badge text. Use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.BadgeSettings.Color"/> for the background color.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.BadgeSettings.Type">
            <summary>
            Badge type - Regular or rounded-pills.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.BadgeSettings.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.BadgeType">
            <summary>
            Type (shape) for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge"/>
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.BadgeType.RoundedPill">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/badge/#pill-badges">https://getbootstrap.com/docs/5.0/components/badge/#pill-badges</see>
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/badge/">Bootstrap Badge</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxBadge">https://havit.blazor.eu/components/HxBadge</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxBadge.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxBadge.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxBadge.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Color">
            <summary>
            Badge color (background).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.TextColor">
            <summary>
            Color of badge text. Use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Color"/> for the background color.
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None"/> (color automatically selected to work with chosen background color).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.Type">
            <summary>
            Badge type - Regular or rounded-pills. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.BadgeType.Regular"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBadge.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation">
            <summary>
            Orientation for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation.Vertical">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/button-group/#vertical-variation">https://getbootstrap.com/docs/5.0/components/button-group/#vertical-variation</see>
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupSize">
            <summary>
            Size for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement">
            <summary>
            Position of the icon within the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ButtonSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ButtonSettings.Size">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/buttons/#sizes">Bootstrap button size</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ButtonSettings.CssClass">
            <summary>
            CSS class to be rendered with the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ButtonSettings.Icon">
            <summary>
            Icon to be rendered with the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ButtonSettings.IconPlacement">
            <summary>
            Position of the icon within the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ButtonSettings.Color">
            <summary>
            Bootstrap button color (style).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ButtonSettings.Outline">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/buttons/#outline-buttons">Bootstrap outline button style</see>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ButtonSize">
            <summary>
            Size for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CloseButtonSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCloseButton"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CloseButtonSettings.White">
            <summary>
            Toggles between the light and dark version of the button.
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxButton">
            <summary>
            Button (<c>&lt;button type="button"&gt;</c>). See also <see href="https://getbootstrap.com/docs/5.1/components/buttons/">Bootstrap Buttons</see>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxButton">https://havit.blazor.eu/components/HxButton</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxButton.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxButton.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxButton.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Text">
            <summary>
            Text of the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.ChildContent">
            <summary>
            Button content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Icon">
            <summary>
            Icon to render into the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.IconPlacement">
            <summary>
            Position of the icon within the button. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ButtonIconPlacement.Start" /> (configurable through <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Color">
            <summary>
            Bootstrap button style - theme color.<br />
            Default is taken from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults"/> (<see cref="F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.None"/> if not customized).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Size">
            <summary>
            Button size. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ButtonSize.Regular"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Outline">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/buttons/#outline-buttons">Bootstrap "outline" button</see> style.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass">
            <summary>
            Custom CSS class to render with the <c>&lt;button /&gt;</c>.<br />
            When using <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip"/> you might want to use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass"/> instead of <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass" /> to get the desired result.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Enabled">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext">
            <summary>
            Associated <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.EditContext"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.FormId">
            <summary>
            Specifies the form the button belongs to.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip">
            <summary>
            Tooltip text.<br/>
            If set, a <c>span</c> wrapper will be rendered around the <c>&lt;button /&gt;</c>. For most scenarios you will then use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass"/> instead of <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CssClass"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipPlacement">
            <summary>
            Tooltip placement.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipCssClass">
            <summary>
            Custom CSS class to render with the tooltip.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.TooltipWrapperCssClass">
            <summary>
            Custom CSS class to render with the tooltip <c>span</c> wrapper of the <c>&lt;button /&gt;</c>.<br />
            If set, the <c>span</c> wrapper will be rendered no matter the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Tooltip"/> text is set or not.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick">
            <summary>
            Raised after the button is clicked.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxButton.InvokeOnClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnValidClick">
            <summary>
            Raised after the button is clicked and EditContext validation succeeds.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxButton.InvokeOnValidClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnValidClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnInvalidClick">
            <summary>
            Raised after the button is clicked and EditContext validation fails.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxButton.InvokeOnInvalidClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnInvalidClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClickStopPropagation">
            <summary>
            Stop onClick-event propagation. Deafult is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClickPreventDefault">
            <summary>
            Prevents the default action for the onclick event. Deafult is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Spinner">
            <summary>
            Set state of the embedded <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner"/>.
            Leave <c>null</c> if you want automated spinner when any of the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick"/> handlers is running.
            You can set an explicit <c>false</c> constant to disable (override) the spinner automation.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.SingleClickProtection">
            <summary>
            Set <c>false</c> if you want to allow multiple <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.OnClick"/> handlers in parallel. Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <c>&lt;button&gt;</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.StringLocalizerFactory">
            <summary>
            Localization service.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.CoreCssClass">
            <summary>
            Gets basic CSS class(es) which get rendered to every single button. <br/>
            Default implementation is <c>"hx-button btn"</c>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup">
            <summary>
            Bootstrap <see href="https://getbootstrap.com/docs/5.0/components/button-group/">Button group</see>s.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxButtonGroup">https://havit.blazor.eu/components/HxButtonGroup</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup.Size">
            <summary>
            Size. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupSize.Regular"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup.Orientation">
            <summary>
            Orientation. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ButtonGroupOrientation.Horizontal"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup.AriaLabel">
            <summary>
            Groups should be given an explicit label, as most assistive technologies will otherwise not announce them, despite the presence of the correct role attribute. 
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButtonGroup.CssClass">
            <summary>
            Additional CSS class(es) to be added.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar">
            <summary>
            Bootstrap <see href="https://getbootstrap.com/docs/5.1/components/button-group/#button-toolbar">Button toolbar</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxButtonToolbar">https://havit.blazor.eu/components/HxButtonToolbar</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar.ChildContent">
            <summary>
            Toolbar's content
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar.AriaLabel">
            <summary>
            An explicit label should be set, as most assistive technologies will otherwise not announce them, despite the presence of the correct role attribute. 
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxButtonToolbar.CssClass">
            <summary>
            CSS class(es) to add to the HTML element with the <c>.btn-toolbar</c> class.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCloseButton">
            <summary>
            Bootstrap <see href="https://getbootstrap.com/docs/5.1/components/close-button/">close-button</see> component.<br />
            A simple close button for dismissing content like modals and alerts.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxCloseButton">https://havit.blazor.eu/components/HxCloseButton</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCloseButton.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCloseButton"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCloseButton.White">
            <summary>
            Toggles between the light and dark version of the button.
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCloseButton.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSubmit">
            <summary>
            Button <c>&lt;button type="submit"&gt;</c>.
            Direct ancestor of <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> with the same API.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxSubmit#HxSubmit">https://havit.blazor.eu/components/HxSubmit#HxSubmit</see>
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationProviderDelegate">
            <summary>
            Allows customization of specific date in calendar (<see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCalendar"/>, <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1"/>, <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"/>).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationRequest">
            <summary>
            Customization request for specific date in calendar (<see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCalendar"/>, <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1"/>, <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationRequest.Target">
            <summary>
            Who is asking for a customization, where the customization will be applied.
            Allows distinquishing From and To inputs in <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationRequest.Date">
            <summary>
            Date to be customized.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationResult">
            <summary>
            Customization result for specific date in calendar (<see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCalendar"/>, <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1"/>, <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationResult.Enabled">
            <summary>
            Indicates whether the date is enabled.<br />
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationResult.CssClass">
            <summary>
            Specifies additional CSS class for the date.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationTarget">
            <summary>
            Indicates date in which calendar is to be customized.
            Allows distinquishing From and To inputs in <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationTarget.Calendar">
            <summary>
            Customization is for standalone <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCalendar" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationTarget.InputDate">
            <summary>
            Customization is for the dropdown calendar in <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationTarget.InputDateRangeFrom">
            <summary>
            Customization is for the <i>From</i> dropdown calendar in <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarDateCustomizationTarget.InputDateRangeTo">
            <summary>
            Customization is for the <i>To</i> dropdown calendar in <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange" />.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CalendarSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCalendar"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarSettings.MinDate">
            <summary>
            Minimal value to choose from calendar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarSettings.MaxDate">
            <summary>
            Maximal value to choose from calendar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CalendarSettings.DateCustomizationProvider">
            <summary>
            Allows customization of the dates in dropdown calendars.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCalendar">
            <summary>
            Basic calendar building block. Used for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1"/> and <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"/> implementation.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxCalendar">https://havit.blazor.eu/components/HxCalendar</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.DefaultMinDate">
            <summary>
            Internal HFW shared default.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.DefaultMaxDate">
            <summary>
            Internal HFW shared default.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCalendar"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.GetDefaults">
            <summary>
            Returns component defaults.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Value">
            <summary>
            Date selected.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.ValueChanged">
            <summary>
            Raised when selected date changes.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.InvokeValueChangedAsync(System.Nullable{System.DateTime})">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.ValueChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.DisplayMonth">
            <summary>
            Month to display.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.DisplayMonthChanged">
            <summary>
            Raised when month selection changes.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.InvokeDisplayMonthChangedAsync(System.DateTime)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.DisplayMonthChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.MinDate">
            <summary>
            First date selectable from the calendar.<br/>
            Default is <c>1.1.1900</c> (configurable from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.MaxDate">
            <summary>
            Last date selectable from the calendar.<br />
            Default is <c>31.12.2099</c> (configurable from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.DateCustomizationProvider">
            <summary>
            Allows customization of the dates in calendar.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCalendar.RefreshAsync">
            <summary>
            Refreshes the calendar.
            Useful when the customization needs to be updated.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CardImagePlacement">
            <summary>
            Placement of the image in the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCard"/> component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CardSettings">
            <summary>
            Settings for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCard"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CardSettings.CssClass">
            <summary>
            Additional CSS classes for the card-container.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CardSettings.HeaderCssClass">
            <summary>
            Additional CSS class for the header.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CardSettings.BodyCssClass">
            <summary>
            Additional CSS class for the body.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CardSettings.FooterCssClass">
            <summary>
            Additional CSS class for the footer.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCard">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/card/">Bootstrap card</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxCard">https://havit.blazor.eu/components/HxCard</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCard"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCard.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCard.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxCard.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ImageSrc">
            <summary>
            Image to be placed in the card. For image position see <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ImagePlacement"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ImagePlacement">
            <summary>
            Placement of the image. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.CardImagePlacement.Top"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ImageAlt">
            <summary>
            Image <c>alt</c> attribute value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ImageWidth">
            <summary>
            Image <c>width</c> attribute value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ImageHeight">
            <summary>
            Image <c>height</c> attribute value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.HeaderTemplate">
            <summary>
            Header content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.BodyTemplate">
            <summary>
            Body content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.FooterTemplate">
            <summary>
            Footer content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.ChildContent">
            <summary>
            Generic card content (outside <c>.card-body</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.CssClass">
            <summary>
            Additional CSS classes for the card-container.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.HeaderCssClass">
            <summary>
            Additional CSS class for the header.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.BodyCssClass">
            <summary>
            Additional CSS class for the body.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.FooterCssClass">
            <summary>
            Additional CSS class for the footer.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCard.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle">
            <summary>
            Bootstrap <see href="https://getbootstrap.com/docs/5.1/components/card/#titles-text-and-links">card-subtitle</see> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle.ChildContent">
            <summary>
            Text content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle.HtmlElement">
            <summary>
            Underlying HTML element for card-subtitle. Default is <c>h6</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle.CssClass">
            <summary>
            Additional CSS class(es) for the card-subtitle element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardSubtitle.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCardText">
            <summary>
            Bootstrap <see href="https://getbootstrap.com/docs/5.1/components/card/#titles-text-and-links">card-title</see> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardText.ChildContent">
            <summary>
            Text content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardText.CssClass">
            <summary>
            Additional CSS class(es) for the card-text element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCardTitle">
            <summary>
            Bootstrap <see href="https://getbootstrap.com/docs/5.1/components/card/#titles-text-and-links">card-title</see> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardTitle.ChildContent">
            <summary>
            Text content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardTitle.HtmlElement">
            <summary>
            Underlying HTML element for card-title. Default is <c>h5</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardTitle.CssClass">
            <summary>
            Additional CSS class(es) for the card-title element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCardTitle.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CarouselPause">
            <summary>
            Behavior of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCarousel"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.CarouselPause.Hover">
            <summary>
            Carousel will stop sliding on hover.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.CarouselPause.False">
            <summary>
            Carousel won't stop sliding on hover.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CarouselRide">
            <summary>
            Behavior of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCarousel"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.CarouselRide.Carousel">
            <summary>
            Autoplays the carousel on load.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.CarouselRide.False">
            <summary>
            Autoplays the carousel after the user manually cycles the first item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs.From">
            <summary>
            Slide from which the sliding transition began.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs.To">
            <summary>
            Slide to which the carousel started sliding or has slid.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs.Direction">
            <summary>
            Direction of sliding (<c>left</c> or <c>right</c>).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCarousel">
            <summary>
            A slideshow component for cycling through elements—images or slides of text—like a carousel.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxCarousel">https://havit.blazor.eu/components/HxCarousel</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.ChildContent">
            <summary>
            Content of the carousel.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.CssClass">
            <summary>
            Carousel CSS class. Added to root div <c>.carousel</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.Controls">
            <summary>
            Display controls to switch between slides.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.Indicators">
            <summary>
            Display indicators showing which slide is active. Can also be used to switch between slides.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.Dark">
            <summary>
            Show controls, captions, etc. to dark colors.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.Crossfade">
            <summary>
            Animate slides with a fade transition instead of slide.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.Interval">
            <summary>
            Delay for automatically switching slides. Default is <c>3000 ms</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.TouchSwiping">
            <summary>
            Enable or disable swiping left/right on touchscreen devices to move between slides.
            Default is <c>true</c> (enabled).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.OnSlide">
            <summary>
            Is fired when the current slide is changed (at the very start of the sliding transition).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.InvokeOnSlideAsync(Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.OnSlide"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.OnSlid">
            <summary>
            Is fired when the current slide is changed (once the transition is completed).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.InvokeOnSlidAsync(Havit.Blazor.Components.Web.Bootstrap.CarouselSlideEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.OnSlid"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.Ride">
            <summary>
            Carousel ride (autoplay) behavior. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.CarouselRide.Carousel"/> (autoplays the carousel on load).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.Pause">
            <summary>
            Carousel pause behavior. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.CarouselPause.Hover"/> (carousel will stop sliding on hover).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.SlideToAsync(System.Int32)">
            <summary>
            Slides to an element with the coresponding index.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.SlideToPreviousItemAsync">
            <summary>
            Slides to the previous item (to the left).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.SlideToNextItemAsync">
            <summary>
            Slides to the next item (to the right).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.CycleAsync">
            <summary>
            Start cycling between slides.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.PauseAsync">
            <summary>
            Pause cycling.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarousel.DisposeAsync">
            <summary>
            Dispose the carousel.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem.Interval">
            <summary>
            Time before automatically cycling to the next item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem.ItemsRegistration">
            <summary>
            Cascading parameter to register the tab.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCarouselItem.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ChipItem">
            <summary>
            Chip item to be rendered in UI.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ChipItem.ChipTemplate">
            <summary>
            Chip template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ChipItem.Removable">
            <summary>
            <c>True</c> when it is possible to remove the chip.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ChipItem.RemoveAction">
            <summary>
            Remove action called when chip should be removed.
            It receives the model from which the chip should be removed.
            It is not the same instance as the one from which the chip was generated!
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ChipListSettings.ChipBadgeSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge"/> used to render chips.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ChipListSettings.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator.OnInitialized">
            <inheritdoc cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnInitialized" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxChipList">
            <summary>
            Presents a list of chips as badges.<br/>
            Usualy being used to present filter-criteria gathered by <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxFilterForm`1"/>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxChipList">https://havit.blazor.eu/components/HxChipList</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxChipList"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxChipList.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxChipList.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxChipList.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.Chips">
            <summary>
            Chips to be presented.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.ChipBadgeSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge"/> used to render chips.
            Default brings <c>Color="<see cref="F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Secondary" />".</c>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.OnChipRemoveClick">
            <summary>
            Called when chip remove button is clicked.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxChipList.InvokeOnChipRemoveClickAsync(Havit.Blazor.Components.Web.Bootstrap.ChipItem)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxChipList.OnChipRemoveClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.IHxChipGenerator">
            <summary>
            Used in a component which can generate chips.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.IHxChipGenerator.GetChips">
            <summary>
            Get chips from the component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection">
            <summary>
            Direction of the animation for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse"/>.
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection.Vertical"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection.Vertical">
            <summary>
            Height transition - vertical.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection.Horizontal">
            <summary>
            Width transition - horizontal.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/collapse/">Bootstrap 5 Collapse</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxCollapse">https://havit.blazor.eu/components/HxCollapse</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.Id">
            <summary>
            Element ID. To be referenced by <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.CollapseTarget"/>.
            (Autogenerated GUID if not set explicitly.)
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.CollapseDirection">
            <summary>
            Direction of the animation.
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.CollapseDirection.Vertical"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.Parent">
            <summary>
            If parent is provided, then all collapsible elements under the specified parent will be closed when this collapsible item is shown.
            (Similar to traditional accordion behavior.)
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.InitiallyExpanded">
            <summary>
            Determines whether the collapse will be open or closed (expanded or collapsed) when first rendered.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.ChildContent">
            <summary>
            Content of the collapse.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.OnShown">
            <summary>
            This event is fired when a collapse element has been made visible to the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.InvokeOnShownAsync(System.String)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.OnShown"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.OnHidden">
            <summary>
            This event is fired when a collapse element has been hidden from the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.InvokeOnHiddenAsync(System.String)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.OnHidden"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <c>div</c> element.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.shouldToggle">
            <summary>
            Indicates ShowAsync() was called before OnAfterRenderAsync (DOM not initialized). Therefor we will remember the request for Show and initialize the collapse with toggle=true.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.ShowAsync">
            <summary>
            Expands the item.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.HideAsync">
            <summary>
            Collapses the item.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.HandleJsShow">
            <summary>
            Receives notification from javascript when item is about to start showing.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.HandleJsShown">
            <summary>
            Receives notification from javascript when item is shown.
            </summary>
            <remarks>
            the shown-event gets raised as the "show" CSS class is added to the HTML element and the transition is completed
            this covers both user-interaction (DOM state) and Blazor-interaction (HxAccordition.ExpandedItemId change)
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.HandleJsHide">
            <summary>
            Receives notification from javascript when item is about to hide.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.HandleJsHidden">
            <summary>
            Receives notification from javascript when item is hidden.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCollapse.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton">
            <summary>
            Bootstrap Collapse toggle (in form of button) which triggers the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse"/> to toggle.
            Derived from <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> (incl. <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxButton.Defaults"/> inheritance).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton.CollapseTarget">
            <summary>
            Target selector of the toggle.
            Use <c>#id</c> to reference single <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse"/> or <c>.class</c> for multiple <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse"/>s.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement">
            <summary>
            Bootstrap Collapse toggle triggering the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse"/> to toggle.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement.ElementName">
            <summary>
            Gets or sets the name of the element to render. Default is <c>span</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement.CssClass">
            <summary>
            Custom CSS class to render with the toggle element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleElement.CollapseTarget">
            <summary>
            Target selector of the toggle.
            Use <c>#id</c> to reference single <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse"/> or <c>.class</c> for multiple <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse"/>s.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.IHxCollapseToggle">
            <summary>
            Interface to help keep the collapse-toggle implementations aligned.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings">
            <summary>
            Settings for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings.CssClass">
            <summary>
            Additional CSS class(es) for the context menu.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings.DropdownCssClass">
            <summary>
            Additional CSS class(es) for the context menu dropdown (container).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings.DropdownMenuCssClass">
            <summary>
            Additional CSS class(es) for the context menu dropdown menu.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings.Icon">
            <summary>
            Icon carring the menu (use <see cref="T:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon" /> or any other <see cref="T:Havit.Blazor.Components.Web.IconBase"/>).<br />
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ContextMenuSettings.IconCssClass">
            <summary>
            Additional CSS class(es) for the context menu icon.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu">
            <summary>
            Ready-made context menu (based on <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Bootstrap Dropdown</see>).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxContextMenu">https://havit.blazor.eu/components/HxContextMenu</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.CssClass">
            <summary>
            Additional CSS class(es) for the context menu.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.DropdownCssClass">
            <summary>
            Additional CSS class(es) for the context menu dropdown (container).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.DropdownMenuCssClass">
            <summary>
            Additional CSS class(es) for the context menu dropdown menu.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.Icon">
            <summary>
            Icon carring the menu (use <see cref="T:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon" /> or any other <see cref="T:Havit.Blazor.Components.Web.IconBase"/>).<br />
            Default is <see cref="P:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon.ThreeDotsVertical"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.IconCssClass">
            <summary>
            Additional CSS class(es) for the context menu icon.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu.ChildContent">
            <summary>
            Items of the context menu. Use <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem"/> components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.Text">
            <summary>
            Item text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.ChildContent">
            <summary>
            Custom item content to be rendered.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.CssClass">
            <summary>
            Additional CSS class(es) for the menu item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.Icon">
            <summary>
            Item icon (use <see cref="T:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon" />).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.IconCssClass">
            <summary>
            Additional CSS class(es) for the context menu item icon.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.ConfirmationQuestion">
            <summary>
            Displays <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox" /> to get a confirmation.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.OnClick">
            <summary>
            Item clicked event.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.InvokeOnClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.OnClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.OnClickStopPropagation">
            <summary>
            Stop onClick-event propagation. Deafult is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.FormState">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.FormState" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuItem.Enabled">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled" />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose">
            <summary>
            Auto-close behavior of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown"/> (<see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton"/> respectively).
            <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/#auto-close-behavior"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True">
            <summary>
            The dropdown will be closed by clicking outside or inside the dropdown menu. Default.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.False">
            <summary>
            The dropdown will be closed by clicking the toggle button. (Also will not be closed by pressing esc key).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.Inside">
            <summary>
            The dropdown will be closed (only) by clicking inside the dropdown menu.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.Outside">
            <summary>
            The dropdown will be closed (only) by clicking outside the dropdown menu.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.DropdownDirection">
            <summary>
            Direction for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown"/>.
            <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/#directions">https://getbootstrap.com/docs/5.1/components/dropdowns/#directions</see>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.DropdownDirection.Start">
            <summary>
            Left (in LTR).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.DropdownDirection.End">
            <summary>
            Right (in LTR).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Bootstrap 5 Dropdown</see> generic component.<br />
            For buttons with dropdowns use more specific <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup"/>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxDropdown">https://havit.blazor.eu/components/HxDropdown</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdown.Direction">
            <summary>
            Direction in which the dropdown is opened.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdown.AutoClose">
            <summary>
            By default, the dropdown menu is closed when clicking inside or outside the dropdown menu (<see cref="F:Havit.Blazor.Components.Web.Bootstrap.DropdownAutoClose.True"/>).
            You can use the AutoClose parameter to change this behavior of the dropdown.
            <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/#auto-close-behavior">https://getbootstrap.com/docs/5.1/components/dropdowns/#auto-close-behavior</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdown.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdown.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <c>div</c> element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Bootstrap 5 Dropdown</see> component for dropdown-buttons.<br />
            For generic dropdowns use <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup.Split">
            <summary>
            Set <c>true</c> to create a <a href="https://getbootstrap.com/docs/5.1/components/dropdowns/#split-button">split dropdown</a>
            (using a <c>btn-group</c>).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent">
            <summary>
            Custom dropdown content for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownContent.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownDivider">
            <summary>
            Divider for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownDivider.CssClass">
            <summary>
            Additional CSS class for underlying <c>li&gt;hr</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownDivider.ContainerCssClass">
            <summary>
            Additional CSS class for underlying <c>li</c> container (wrapping the main <c>hr</c> inside).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/#headers">Dropdown menu header</see> for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownHeader.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem">
            <summary>
            Generic item for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.CssClass">
            <summary>
            Additional CSS class for underlying <c>li&gt;span</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.ContainerCssClass">
            <summary>
            Additional CSS class for underlying <c>li</c> container (wrapping the main <c>span</c> inside).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.OnClick">
            <summary>
            Raised when the item is clicked.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.InvokeOnClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.OnClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.Enabled">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItem.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <c>li&gt;span</c> element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/> item for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.Href">
            <summary>
            Navigation target.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.Text">
            <summary>
            Text of the item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.Match">
            <summary>
            URL matching behavior for the underlying <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/>.
            Default is <see cref="F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix"/>.
            You can set the value to <c>null</c> to disable the matching.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.OnClick">
            <summary>
            Raised when the item is clicked.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.InvokeOnClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.OnClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.ContainerCssClass">
            <summary>
            Additional CSS class for underlying <c>li</c> container (wrapping the main <c>a</c> inside).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.Enabled">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.ChildContent">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemNavLink.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/> component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText">
            <summary>
            Text item for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownItemText.ContainerCssClass">
            <summary>
            Additional CSS class for underlying <c>li</c> container (wrapping the main <c>span</c> inside).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu">
            <summary>
            Bootstrap Dropdown menu which opens when triggered.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownMenu.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <c>ul</c> element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Bootstrap Dropdown</see> toggle button which triggers the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownButtonGroup"/> to open.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.GetDefaults">
            <inheritdoc cref="M:Havit.Blazor.Components.Web.Bootstrap.HxButton.GetDefaults"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.DropdownOffset">
            <summary>
            Offset <c>(<see href="https://popper.js.org/docs/v2/modifiers/offset/#skidding-1">skidding</see>, <see href="https://popper.js.org/docs/v2/modifiers/offset/#distance-1">distance</see>)</c>
            of the dropdown relative to its target.  Default is <c>(0, 2)</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.DropdownReference">
            <summary>
            Reference element of the dropdown menu. Accepts the values of <c>toggle</c> (default), <c>parent</c>,
            an HTMLElement reference (e.g. <c>#id</c>) or an object providing <c>getBoundingClientRect</c>.
            For more information refer to Popper's <see href="https://popper.js.org/docs/v2/constructors/#createpopper">constructor docs</see>
            and <see href="https://popper.js.org/docs/v2/virtual-elements/">virtual element docs</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.OnShown">
            <summary>
            Fired when the dropdown has been made visible to the user and CSS transitions have completed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.InvokeOnShownAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.OnShown"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.OnHidden">
            <summary>
            Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.InvokeOnHiddenAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.OnHidden"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.ShowAsync">
            <summary>
            Shows the dropdown.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.HideAsync">
            <summary>
            Hides the dropdown.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.HandleJsShown">
            <summary>
            Receives notification from javascript when dropdown is shown.
            </summary>
            <remarks>
            the shown-event gets raised as the "show" CSS class is added to the HTML element and the transition is completed
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.HandleJsHidden">
            <summary>
            Receives notification from javascript when item is hidden.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleButton.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Bootstrap Dropdown</see> toggle button which triggers the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxDropdown"/> to open.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.ElementName">
            <summary>
            Gets or sets the name of the element to render. Default is <c>span</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.Caret">
            <summary>
            Gets or sets whether to display caret in the toggle.<br />
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.DropdownReference">
            <summary>
            Reference element of the dropdown menu. Accepts the values of <c>toggle</c> (default), <c>parent</c>,
            an HTMLElement reference (e.g. <c>#id</c>) or an object providing <c>getBoundingClientRect</c>.
            For more information refer to Popper's <see href="https://popper.js.org/docs/v2/constructors/#createpopper">constructor docs</see>
            and <see href="https://popper.js.org/docs/v2/virtual-elements/">virtual element docs</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.DropdownOffset">
            <summary>
            Offset <c>(<see href="https://popper.js.org/docs/v2/modifiers/offset/#skidding-1">skidding</see>, <see href="https://popper.js.org/docs/v2/modifiers/offset/#distance-1">distance</see>)</c>
            of the dropdown relative to its target.  Default is <c>(0, 2)</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.CssClass">
            <summary>
            Custom CSS class to render with the toggle element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.OnShown">
            <summary>
            Fired when the dropdown has been made visible to the user and CSS transitions have completed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.InvokeOnShownAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.OnShown"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.OnHidden">
            <summary>
            Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.InvokeOnHiddenAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.OnHidden"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.ShowAsync">
            <summary>
            Shows the dropdown.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.HideAsync">
            <summary>
            Hides the dropdown.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.HandleJsShown">
            <summary>
            Receives notification from javascript when dropdown is shown.
            </summary>
            <remarks>
            the shown-event gets raised as the "show" CSS class is added to the HTML element and the transition is completed
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.HandleJsHidden">
            <summary>
            Receives notification from javascript when item is hidden.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDropdownToggleElement.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.IDropdownContainer">
            <summary>
            Helps keeping some properties/methods hidden from regular API (accesible via interface).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.IHxDropdownToggle">
            <summary>
            Interface to help keep the dropdown-toggle implementations aligned.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputFile">
            <summary>
            Wraps <see cref="T:Havit.Blazor.Components.Web.HxInputFileCore"/> as Bootstrap form control (incl. <c>Label</c> etc.)<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputFile">https://havit.blazor.eu/components/HxInputFile</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputFile"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.UploadUrl">
            <summary>
            URL of the server endpoint receiving the files.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnChange">
            <summary>
            Gets or sets the event callback that will be invoked when the collection of selected files changes.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.InvokeOnChangeAsync(Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnChange"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnProgress">
            <summary>
            Raised during running file upload (the frequency depends on browser implementation).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.InvokeOnProgressAsync(Havit.Blazor.Components.Web.UploadProgressEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnProgress"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnFileUploaded">
            <summary>
            Raised after a file is uploaded (for every single file separately).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.InvokeOnFileUploadedAsync(Havit.Blazor.Components.Web.FileUploadedEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnFileUploaded"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnUploadCompleted">
            <summary>
            Raised when all files are uploaded (after all <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnFileUploaded"/> events).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.InvokeOnUploadCompletedAsync(Havit.Blazor.Components.Web.UploadCompletedEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnUploadCompleted"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Multiple">
            <summary>
            Single <c>false</c> or multiple <c>true</c> files upload.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.MaxParallelUploads">
            <summary>
            Maximum number of concurrent uploads. Default is <c>6</c> (from <see cref="T:Havit.Blazor.Components.Web.HxInputFileCore"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Accept">
            <summary>
            Takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow.
            <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept">MDN Web Docs - HTML attribute: accept</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.MaxFileSize">
            <summary>
            The maximum files size in bytes.
            When exceeded, the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.OnFileUploaded"/> returns <c>413-RequestEntityTooLarge</c> as <see cref="P:Havit.Blazor.Components.Web.FileUploadedEventArgs.ResponseStatus"/>.
            Default is <c>null</c> (unlimited).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Label">
            <summary>
            Label to render before input (or after input for Checkbox).		
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.LabelTemplate">
            <summary>
            Label to render before input (or after input for Checkbox).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Hint">
            <summary>
            Hint to render after input as form-text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.HintTemplate">
            <summary>
            Hint to render after input as form-text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.CssClass">
            <summary>
            Custom CSS class to render with wrapping div.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.LabelCssClass">
            <summary>
            Custom CSS class to render with the label.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.InputCssClass">
            <summary>
            Custom CSS class to render with the input element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.Enabled">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.FormState">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.FormState" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.FileCount">
            <summary>
            Last known count of associated files.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.InputId">
            <summary>
            ID if the input element. Autogenerated when used with label.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.CoreInputCssClass">
            <summary>
            CSS class to be rendered with the input element.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.GetFilesAsync">
            <summary>
            Gets list of files chosen.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.ResetAsync">
            <summary>
            Clears associated input-file element and resets component to initial state.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.StartUploadAsync(System.String)">
            <summary>
            Starts the upload.
            </summary>
            <param name="accessToken">Authorization Bearer Token to be used for upload (i.e. use IAccessTokenProvider).</param>
            <remarks>
            We do not want to make the Havit.Blazor library dependant on WebAssembly libraries (IAccessTokenProvider and such). Therefor the accessToken here...
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFile.UploadAsync(System.String)">
            <summary>
            Uploads the file(s).
            </summary>
            <param name="accessToken">Authorization Bearer Token to be used for upload (i.e. use IAccessTokenProvider).</param>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone">
            <summary>
            Ready-made UX for drag&amp;drop file upload.
            For custom drag&amp;drop UX, use <see cref="T:Havit.Blazor.Components.Web.HxInputFileCore"/> and <see href="https://github.com/havit/Havit.Blazor/blob/728567c9c83a0b4ab7fe2e031bf1ff378f1b1ce7/Havit.Blazor.Components.Web.Bootstrap/Files/HxInputFileDropZone.razor.css#L20-L26">a little bit of HTML/CSS</see>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputFileDropZone">https://havit.blazor.eu/components/HxInputFileDropZone</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.UploadUrl">
            <summary>
            URL of the server endpoint receiving the files.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnChange">
            <summary>
            Gets or sets the event callback that will be invoked when the collection of selected files changes.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.InvokeOnChangeAsync(Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnChange"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnProgress">
            <summary>
            Raised during running file upload (the frequency depends on browser implementation).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.InvokeOnProgressAsync(Havit.Blazor.Components.Web.UploadProgressEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnProgress"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnFileUploaded">
            <summary>
            Raised after a file is uploaded (for every single file separately).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.InvokeOnFileUploadedAsync(Havit.Blazor.Components.Web.FileUploadedEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnFileUploaded"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnUploadCompleted">
            <summary>
            Raised when all files are uploaded (after all <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnFileUploaded"/> events).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.InvokeOnUploadCompletedAsync(Havit.Blazor.Components.Web.UploadCompletedEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnUploadCompleted"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.Multiple">
            <summary>
            Single <c>false</c> or multiple <c>true</c> files upload.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.MaxFileSize">
            <summary>
            The maximum files size in bytes.
            When exceeded, the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.OnFileUploaded"/> returns <c>413-RequestEntityTooLarge</c> as <see cref="P:Havit.Blazor.Components.Web.FileUploadedEventArgs.ResponseStatus"/>.
            Default is <c>null</c> (unlimited).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.Accept">
            <summary>
            Takes as its value a comma-separated list of one or more file types, or unique file type specifiers, describing which file types to allow.
            <see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept">MDN Web Docs - HTML attribute: accept</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.NoFilesTemplate">
            <summary>
            Content to render when no files are picked. Default content is displayed when not set.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.CssClass">
            <summary>
            Custom CSS class to render with wrapping div.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.InputCssClass">
            <summary>
            Custom CSS class to render with the input element.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.GetFilesAsync">
            <summary>
            Gets list of files chosen.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.ResetAsync">
            <summary>
            Clears associated input-file element and resets component to initial state.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.StartUploadAsync(System.String)">
            <summary>
            Starts the upload.
            </summary>
            <param name="accessToken">Authorization Bearer Token to be used for upload (i.e. use IAccessTokenProvider).</param>
            <remarks>
            We do not want to make the Havit.Blazor library dependant on WebAssembly libraries (IAccessTokenProvider and such). Therefor the accessToken here...
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputFileDropZone.UploadAsync(System.String)">
            <summary>
            Uploads the file(s).
            </summary>
            <param name="accessToken">Authorization Bearer Token to be used for upload (i.e. use IAccessTokenProvider).</param>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputFileSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputFile"/> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputFileSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxFilterForm`1">
            <summary>
            Edit form derived from HxModelEditForm with support for chip generators.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxFilterForm">https://havit.blazor.eu/components/HxFilterForm</see>
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxFilterForm`1.InvokeOnChipsUpdatedAsync(Havit.Blazor.Components.Web.Bootstrap.ChipItem[])">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxFilterForm`1.OnChipsUpdated"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxFilterForm`1.RemoveChipAsync(Havit.Blazor.Components.Web.Bootstrap.ChipItem)">
            <summary>
            Tries to remove chip.
            Execution is postponed to OnAfterRender, so this method cannot have a return value.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderDelegate`1">
            <summary>
            Data provider (delegate).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderRequest">
            <summary>
            Data provider request for autosuggest data.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderRequest.UserInput">
            <summary>
            Autosuggest current user input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderRequest.CancellationToken">
            <summary>
            The <see cref="T:System.Threading.CancellationToken"/> used to relay cancellation of the request.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderResult`1">
            <summary>
            Data provider result for autosuggest data.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestDataProviderResult`1.Data">
            <summary>
            The provided items by the request.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings.SearchIcon">
            <summary>
            Icon displayed in input when no item is selected.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings.ClearIcon">
            <summary>
            Icon displayed in input on selection clear button when item is selected.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings.MinimumLength">
            <summary>
            Minimal number of characters to start suggesting.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings.Delay">
            <summary>
            Debounce delay in miliseconds.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.AutosuggestSettings.HighlightFirstSuggestion">
            <summary>
            If true, the first suggestion is highlighted until another is chosen by the user.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2">
            <summary>
            Component for single item selection with dynamic suggestions (based on typed characters).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxAutosuggest">https://havit.blazor.eu/components/HxAutosuggest</see>
            </summary>
            <remarks>
            Defaults located in separate non-generic type <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest"/>.
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.DataProvider">
            <summary>
            Method (delegate) which provides data of the suggestions.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.ValueSelector">
            <summary>
            Selects value from item.
            Not required when <c>TValue</c> is same as  <c>TItem</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.TextSelector">
            <summary>
            Selects text to display from item.
            When not set <c>ToString()</c> is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.ItemTemplate">
            <summary>
            Template to display item.
            When not set, <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.TextSelector"/> is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.EmptyTemplate">
            <summary>
            Template to display when items are empty.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.SearchIcon">
            <summary>
            Icon displayed in input when no item is selected.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.ClearIcon">
            <summary>
            Icon displayed in input on selection clear button when item is selected.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.MinimumLength">
            <summary>
            Minimal number of characters to start suggesting.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.Delay">
            <summary>
            Debounce delay in miliseconds.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.Placeholder">
            <summary>
            Short hint displayed in the input field before the user enters a value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.LabelType">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.Bootstrap.LabelType" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.HighlightFirstSuggestion">
            <summary>
            If true, the first suggestion is highlighted until another is chosen by the user.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.DropdownOffset">
            <summary>
            Offset between the dropdown and the input.
            <see href="https://popper.js.org/docs/v2/modifiers/offset/#options"/>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.ItemFromValueResolver">
            <summary>
            Returns corresponding item for (select) Value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.InputGroupEndText">
            <summary>
            Input-group at the end of the input.<br/>
            Hides the search icon when used!
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.<br/>
            Hides the search icon when used!
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.TryParseValueFromString(System.String,`1@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.FocusAsync">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.RenderChipGenerator(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2.RenderChipValue(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest">
            <summary>
            Non-generic API for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInput.DropdownOffset">
            <summary>
            Offset between the dropdown and the input.
            <see href="https://popper.js.org/docs/v2/modifiers/offset/#options"/>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInput.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.ValueSelector">
            <summary>
            Selects value from item.
            Not required when TValue is same as TItemTime.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.TextSelector">
            <summary>
            Selects text to display from item.
            When not set ToString() is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.ItemTemplate">
            <summary>
            Template to display item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.EmptyTemplate">
            <summary>
            Template to display when items collection is empty
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.ItemFromValueResolver">
            <summary>
            Gets item from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.Value"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.MinimumLengthEffective">
            <summary>
            Minimal number of characters to start suggesting. Default is <c>2</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.Placeholder">
            <summary>
            Short hint displayed in the input field before the user enters a value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.DelayEffective">
            <summary>
            Debounce delay in miliseconds. Default is <c>300 ms</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.DropdownOffset">
            <summary>
            Offset between the dropdown and the input.
            <see href="https://popper.js.org/docs/v2/modifiers/offset/#options"/>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.InputGroupCssClass">
            <summary>
            Custom CSS class to render with input-group span.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.InputGroupEndText">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.HighlightFirstSuggestionEffective">
            <summary>
            If true, the first suggestion is highlighted until another is chosen by the user.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestInternal`2.HandleInputEnterKeyDown">
            <summary>
            Select the first suggested item when an enter key is pressed.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxAutosuggestItems`1.HighlightFirstSuggestionEffective">
            <summary>
            Visually highlights the first suggestion.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.FormValueComponentExtensions">
            <summary>
            Extension methods to <see cref="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent" />.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.FormValueComponentExtensions.ShouldRenderInputGroups(Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent)">
            <summary>
            Returns <c>true</c> if <see cref="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent" /> should render input groups (at least one input group).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.FormValueRenderer">
            <summary>
            Renders <see cref="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent" />.
            The purpose of this class is to allow to use custom renderer.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.FormValueRenderer.Current">
            <summary>
            Current renderer.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.FormValueRenderer.Render(System.Int32,Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent)">
            <summary>
            Renders <see cref="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer.FormValueComponent">
            <summary>
            Values for component renderer.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer.BuildRenderLabel(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders label when properties set.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer.BuildRenderInputGroups(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            Renders input groups (with content).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer.BuildRenderValue(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders value/input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer.BuildRenderHint(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders hint when property HintTemplate set.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer.BuildRenderValidationMessage(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders validation message.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueRenderer">
            <summary>
            Default <see cref="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent" /> renderer.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueRenderer.Render(System.Int32,Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent)">
            <summary>
            Adds <see cref="T:Havit.Blazor.Components.Web.Bootstrap.Internal.HxFormValueComponentRenderer"/> to a builder.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal`1.InputGroupCssClass">
            <summary>
            Custom CSS class to render with input-group span.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal`1.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal`1.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal`1.InputGroupEndText">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal`1.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateInternal`1.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputDateRangeInternal.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal`2.InputGroupCssClass">
            <summary>
            Custom CSS class to render with input-group span.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal`2.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal`2.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal`2.InputGroupEndText">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal`2.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectInternal`2.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent">
            <summary>
            Represents properties (and methods) of a component rendering a form value (ie. form inputs).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.CssClass">
            <summary>
            Custom CSS class to render with wrapping div.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.Label">
            <summary>
            Label to render before input (or after input for Checkbox).		
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelTemplate">
            <summary>
            Label to render before input (or after input for Checkbox).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelFor">
            <summary>
            Element id to render as label for attibute.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelCssClass">
            <summary>
            Custom CSS class to render with the label.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.RenderValue(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders content of the component (value, input).
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.RenderValidationMessage(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders validation message.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.Hint">
            <summary>
            Hint to render after input as form-text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.HintTemplate">
            <summary>
            Hint to render after input as form-text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.CoreCssClass">
            <summary>
            CSS class to be rendered with the wrapping div.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.CoreLabelCssClass">
            <summary>
            CSS class to be rendered with the label.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.CoreHintCssClass">
            <summary>
            CSS class to be rendered with the hint.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.RenderOrder">
            <summary>
            Render order LabelValue or ValueLabel.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups">
            <summary>
            Extends <see cref="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent"/> with properties for rendering input groups.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupCssClass">
            <summary>
            Custom CSS class to render with input-group span.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartText">
            <summary>
            Input-group-text at the beginning of the input.
            In comparison to <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartTemplate"/> this property is rendered as <c>.input-group-text</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndText">
            <summary>
            Input-group-text at the end of the input.
            In comparison to <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndTemplate"/> this property is rendered as <c>.input-group-text</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputSettingsWithSize.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithLabelType">
            <summary>
            Input with label type.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithLabelType.LabelType">
            <summary>
            Label type.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithLabelType.LabelTypeEffective">
            <summary>
            Effective label type.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithPlaceholder">
            <summary>
            Input with placeholder support.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithPlaceholder.Placeholder">
            <summary>
            Placeholder for the input.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithSize">
            <summary>
            Input with sizing support.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithSize.InputSizeEffective">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.LabelValueRenderOrder">
            <summary>
            Render order.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.Internal.LabelValueRenderOrder.LabelValue">
            <summary>
            Render label first, then value/input (majority of components).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.Internal.LabelValueRenderOrder.ValueLabel">
            <summary>
            Render value/input first, then label (ie. <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox" />).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.Internal.LabelValueRenderOrder.ValueOnly">
            <summary>
            Render value/input only. Label is not rendered (ie. <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2" /> with floating label which renders label internally).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.StringPatternizer.TranslateInlineCharCodes(System.String)">
            <summary>
            Searches for character codes surrounded with '{' and '}' and replaces them with corresponding symbol.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxMultiSelectGridColumnInternal`1.GetColumnOrder">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/> variation which adds <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal.OnClick"/> and related stuff.
            </summary>
            <remarks>
            <see href="https://github.com/dotnet/aspnetcore/issues/18460#issuecomment-577175682">https://github.com/dotnet/aspnetcore/issues/18460#issuecomment-577175682</see>.
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxNavLinkInternal.OnClick">
            <summary>
            Raised when the item is clicked.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsAutosuggestInput.Offset">
            <summary>
            Offset between dropdown input and dropdown menu
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal">
            <summary>
            Internal implementation for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.AllowCustomTags">
            <summary>
            Indicates whether you are restricted to suggested items only (<c>false</c>).
            Default is <c>true</c> (you can type your own tags).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.SuggestMinimumLengthEffective">
            <summary>
            Minimal number of characters to start suggesting. Default is <c>2</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.DelimitersEffective">
            <summary>
            Characters, when typed, divide the current input into separate tags.
            Default is comma, semicolon and space.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.ShowAddButtonEffective">
            <summary>
            Indicates whether the add-icon (+) should be displayed.
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.AddButtonText">
            <summary>
            Optional text for the add-button.
            Displayed only when there are no tags (the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.Value"/> is empty).
            Default is <c>null</c> (none).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.Naked">
            <summary>
            Indicates whether a "naked" variant should be displayed (no border).
            Default is <c>false</c>.
            Consider enabling <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ShowAddButton"/> when using <c>Naked</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.Placeholder">
            <summary>
            Short hint displayed in the input field before the user enters a value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.TagBadgeSettingsEffective">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge"/> used to render tags.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.CoreFormControlCssClass">
            <summary>
            CSS of the wrapping .form-control container (corresponds to InputCssClass on regular inputs)
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputOffset">
            <summary>
            Offset between dropdown input and dropdown menu
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupCssClass">
            <summary>
            Custom CSS class to render with input-group span.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupEndText">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxInputTagsInternal.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML input.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase">
            <summary>
            Common implementation for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxTooltip"/> and <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPopover"/>.
            </summary>
            <remarks>
            We do not want HxPopover to derive from HxTooltip directly as we want
            to keep the API consistent, e.g. HxPopover.Placement = PopoverPlacement.Auto, not TooltipPlacement.Auto or anything else.
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.Html">
            <summary>
            Allows you to insert HTML. If <c>false</c>, <c>innerText</c> property will be used to insert content into the DOM.
            Use text if you're worried about XSS attacks.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.Sanitize">
            <summary>
            Enable or disable the sanitization. If activated HTML content will be sanitized. <see href="https://getbootstrap.com/docs/5.1/getting-started/javascript/#sanitizer">See the sanitizer section in Bootstrap JavaScript documentation</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.Offset">
            <summary>
            Offset of the component relative to its target (ChildContent).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.CssClass">
            <summary>
            Custom CSS class to add.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.WrapperCssClass">
            <summary>
            Custom CSS class to render with the <c>span</c> wrapper of the child-content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.ChildContent">
            <summary>
            Child content to wrap.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.OnShown">
            <summary>
            Fired when the content has been made visible to the user and CSS transitions have completed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.InvokeOnShownAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.OnShown"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.OnHidden">
            <summary>
            Fired when the content has finished being hidden from the user and CSS transitions have completed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.InvokeOnHiddenAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.OnHidden"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.ShowAsync">
            <summary>
            Shows the component.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.HideAsync">
            <summary>
            Hides the component.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.HandleJsShown">
            <summary>
            Receives notification from javascript when content is shown.
            </summary>
            <remarks>
            the shown-event gets raised as the "show" CSS class is added to the HTML element and the transition is completed
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Internal.HxTooltipInternalBase.HandleJsHidden">
            <summary>
            Receives notification from javascript when content is hidden.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.BindEvent">
            <summary>
            Event to use for data-binding.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.BindEvent.OnInput">
            <summary>
            "oninput" event is used to retrieved value from the input element.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.BindEvent.OnChange">
            <summary>
            "onchange" event is used to retrieved value from the input element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.BindEventExtensions">
            <summary>
            <seealso cref="T:Havit.Blazor.Components.Web.Bootstrap.BindEvent" /> extensions.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.BindEventExtensions.ToEventName(Havit.Blazor.Components.Web.Bootstrap.BindEvent)">
            <summary>
            Gets the name of event as string.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.FormValueSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxFormValue"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.FormValueSettings.InputSize">
            <summary>
            Input size. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.InputSize.Regular"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2">
            <summary>
            Renders a multi-selection list of <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox"/> controls.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxCheckboxList">https://havit.blazor.eu/components/HxCheckboxList</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.Data">
            <summary>
            Items to display. 
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.TextSelector">
            <summary>
            TextSelector is obsolete, please use ItemTextSelector instead.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemTextSelector">
            <summary>
            Selects text to display from item.
            When not set, ToString() is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ValueSelector">
            <summary>
            ValueSelector is obsolete, please use ItemValueSelector instead.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemValueSelector">
            <summary>
            Selects value from item.
            Not required when TValue is same as TItem.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.SortKeySelector">
            <summary>
            SortKeySelector is obsolete, please use ItemSortKeySelector instead.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemSortKeySelector">
            <summary>
            Selects value for items sorting. When not set, <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.TextSelector"/> property will be used.
            If you need complex sorting, pre-sort data manually or create a custom comparable property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemCssClass">
            <summary>
            Additional CSS class(es) for underlying <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemCssClassSelector">
            <summary>
            Additional CSS class(es) for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemInputCssClass">
            <summary>
            Additional CSS class(es) for the input element of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemInputCssClassSelector">
            <summary>
            Additional CSS class(es) for the input element of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemTextCssClass">
            <summary>
            Additional CSS class(es) for the text of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.ItemTextCssClassSelector">
            <summary>
            Additional CSS class(es) for the text of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.AutoSort">
            <summary>
            When <c>true</c>, items are sorted before displaying in select.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.Inline">
            <summary>
            Allows grouping checkboxes on the same horizontal row by rendering them inline. Default is <c>false</c>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxCheckboxList`2.FocusAsync">
            <summary>
            Throws NotSupportedException - giving focus to an input element is not supported on the HxCheckboxList.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxFormValue">
            <summary>
            Displays a read-only value in the form control visual (as <c>.form-control</c>, with label, border, etc.).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxFormValue">https://havit.blazor.eu/components/HxFormValue</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxFormValue"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.CssClass">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.CssClass" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Label">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.Label" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.LabelTemplate">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelTemplate" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.LabelCssClass">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.LabelCssClass" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Hint">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.Hint" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.HintTemplate">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponent.HintTemplate" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.Value">
            <summary>
            Value to be presented.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.ValueTemplate">
            <summary>
            Template to render value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.ValueCssClass">
            <summary>
            Custom CSS class to render with the value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupStartText">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartText" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupStartTemplate">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupStartTemplate" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupEndText">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndText"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputGroupEndTemplate">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IFormValueComponentWithInputGroups.InputGroupEndTemplate" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxFormValue.RenderValue(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1">
            <summary>
            A base class for form input components. This base class automatically integrates
            with an Microsoft.AspNetCore.Components.Forms.EditContext, which must be supplied
            as a cascading parameter.
            Extends <see cref="T:Microsoft.AspNetCore.Components.Forms.InputBase`1"/> class.
            
            Adds support for rendering bootstrap based input with validator.
            See also <see href="https://getbootstrap.com/docs/5.0/forms/overview/">https://getbootstrap.com/docs/5.0/forms/overview/</see>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.InvalidCssClass">
            <summary>
            CSS class used for invalid input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.FormState" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.Label">
            <summary>
            Label text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.LabelTemplate">
            <summary>
            Label content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.Hint">
            <summary>
            Hint to render after input as form-text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.HintTemplate">
            <summary>
            Hint to render after input as form-text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CssClass">
            <summary>
            Custom CSS class to render with wrapping div.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.LabelCssClass">
            <summary>
            Custom CSS class to render with the label.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.InputCssClass">
            <summary>
            Custom CSS class to render with the input element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.ShowValidationMessage">
            <summary>
            When <c>false</c>, validation message is not rendered. Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.GenerateChip">
            <summary>
            When <c>true</c>, <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxChipGenerator"/> is used to generate chip item(s). Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.ChipTemplate">
            <summary>
            Chip template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.Enabled">
            <summary>
            When <c>null</c> (default), the <c>Enabled</c> value is received from cascading <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FormState" />.
            When value is <c>false</c>, input is rendered as disabled.
            To set multiple controls as disabled use <seealso cref="T:Havit.Blazor.Components.Web.HxFormState" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.EnabledEffective">
            <summary>
            Returns effective value for <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.Enabled"/> property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CoreCssClass">
            <summary>
            CSS class to be rendered with the wrapping div.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CoreInputCssClass">
            <summary>
            CSS class to be rendered with the input element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CoreLabelCssClass">
            <summary>
            CSS class to be rendered with the label.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CoreHintCssClass">
            <summary>
            CSS class to be rendered with the hint.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.InputId">
            <summary>
            ID if the input element. Autogenerated when used with label.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.InputElement">
            <summary>
            Input ElementReference.
            Can be <c>null</c>. 
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.RenderOrder">
            <summary>
            Elements rendering order. Overriden in the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox"/> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CurrentValue">
            <summary>
            Gets or sets the current value of the input.
            Setter can be used only when the component is enabled.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CurrentValueAsString">
            <summary>
            Gets or sets the current value of the input, represented as a string.
            Setter can be used only when the component is enabled.
            </summary>
            <remarks>
            Although CurrentValueAsString calls CurrentValue we MUST implement the check here because
            CurrentValue is not virtual, so CurrentValueAsString calls CurrentValue in a base class.
            There is no such check.
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.EnsureCascadingEditContext">
            <summary>
            When there is no EditContext cascading parameter, lets create a new one and assing it to CascadedEditContext private property in a base InputBase class.
            </summary>
            <remarks>
            Even there is a protected EditContext property we cannot assign a value. When doing so InvalidOperationException exception is thrown.
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.RenderWithAutoCreatedEditContextAsCascandingValue(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32,Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            When EditContext was automaticly created, this method renders CascandingValue component with this EditContext and the content of the renderFrament.
            Otherwise only renderFragment is rendered.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.BuildRenderInput_AddCommonAttributes(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.String)">
            <summary>
            Add common attributes to the input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.BuildRenderValidationMessage(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders validation message (component <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1" />) when not disabled (<seealso cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.ShowValidationMessage" />).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.RenderChipGenerator(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders chip generator.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.ShouldRenderChipGenerator">
            <summary>
            Returns true when chip should be rendered.
            Supposed to make decision based on CurrentValue.
            </summary>
            <remarks>
            This method is called only when <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.GenerateChip" /> is <c>true</c>.
            The implementation of the method is not supposed to use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.GenerateChip" /> property itself.
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.RenderChipTemplate(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Returns chip template.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.GetChipRemoveAction">
            <summary>
            Returns action to remove chip from model.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.GetChipRemoveValue">
            <summary>
            Returns a value to be used to remove a chip.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FocusAsync">
            <summary>
            Gives focus to the input element.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.EnsureInputId">
            <summary>
            Sets InputId to a random value when empty.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.IsValueInvalid">
            <summary>
            Returns <c>true</c> when the Value is considered do be invalid. Otherwise <c>false</c>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.GetInputCssClassToRender">
            <summary>
            Gets css class for input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.GetValueAttribute``1">
            <summary>
            Returns attribute from the bounded property if exists. Otherwise returns <c>null</c>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.ThrowIfNotEnabled">
            <summary>
            Throws <see cref="T:System.InvalidOperationException" /> when the component is disabled.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputBaseWithInputGroups`1">
            <summary>
            A base class for form input components. This base class automatically integrates
            with an Microsoft.AspNetCore.Components.Forms.EditContext, which must be supplied
            as a cascading parameter.
            Extends <seealso cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1" /> class.
            Adds support for input groups, <see href="https://getbootstrap.com/docs/5.0/forms/input-group/">https://getbootstrap.com/docs/5.0/forms/input-group/</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBaseWithInputGroups`1.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBaseWithInputGroups`1.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBaseWithInputGroups`1.InputGroupEndText">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBaseWithInputGroups`1.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox">
            <summary>
            Checkbox input.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputCheckbox">https://havit.blazor.eu/components/HxInputCheckbox</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox.Inline">
            <summary>
            Allows grouping checkboxes on the same horizontal row by rendering them inline. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox.RenderOrder">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.Bootstrap.Internal.LabelValueRenderOrder" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox.CoreCssClass">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CoreCssClass" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox.CoreInputCssClass">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CoreInputCssClass" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox.CoreLabelCssClass">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.CoreLabelCssClass" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox.TryParseValueFromString(System.String,System.Boolean@,System.String@)">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1">
            <summary>
            Date picker. Form input component for entering a date.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputDate">https://havit.blazor.eu/components/HxInputDate</see>
            </summary>
            <remarks>
            Defaults located in separate non-generic type <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate"/>.
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.ShowPredefinedDates">
            <summary>
            When enabled (default is <c>true</c>), shows predefined days (from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.PredefinedDates"/>, e.g. Today).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.PredefinedDates">
            <summary>
            Predefined dates to be displayed.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.ParsingErrorMessage">
            <summary>
            Gets or sets the error message used when displaying a parsing error.
            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by <c>Label</c> property, <c>{1}</c> name of bounded property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.Placeholder">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Internal.IInputWithPlaceholder.Placeholder" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.CalendarIcon">
            <summary>
            Optional icon to display within the input. Use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults"/> to set the icon for the whole project.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.ShowCalendarButtons">
            <summary>
            Indicates whether the <i>Clear</i> and <i>OK</i> buttons in calendar should be visible.<br/>
            Default is <c>true</c> (configurable in <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.MinDate">
            <summary>
            First date selectable from the dropdown calendar.<br />
            Default is <c>1.1.1900</c> (configurable from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.MaxDate">
            <summary>
            Last date selectable from the dropdown calendar.<br />
            Default is <c>31.12.2099</c> (configurable from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.CalendarDateCustomizationProvider">
            <summary>
            Allows customization of the dates in dropdown calendar.<br />
            Default customization is configurable with <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.LabelType">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.Bootstrap.LabelType" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.InputGroupCssClass">
            <summary>
            Custom CSS class to render with input-group span.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.InputGroupEndText">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.FormatValueAsString(`0)">
            <inheritdocs />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.GetParsingErrorMessage">
            <summary>
            Returns message for a parsing error.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate">
            <summary>
            Non-generic API for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1"/>.
            Marker for resources for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange">
            <summary>
            Date range picker. Form input component for entering start date and end date.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputDateRange">https://havit.blazor.eu/components/HxInputDateRange</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.ShowPredefinedDateRanges">
            <summary>
            When enabled (default is <c>true</c>), shows predefined days (from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.PredefinedDateRanges"/>, e.g. Today).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.PredefinedDateRanges">
            <summary>
            Predefined dates to be displayed.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.FromParsingErrorMessage">
            <summary>
            Gets or sets the error message used when displaying an a &quot;from&quot; parsing error.
            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by Label property, <c>{1}</c> name of bounded property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.ToParsingErrorMessage">
            <summary>
            Gets or sets the error message used when displaying an a &quot;to&quot; parsing error.
            Used with <c>String.Format(...)</c>, <c>{0}</c> is replaced by Label property, <c>{1}</c> name of bounded property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.ShowCalendarButtons">
            <summary>
            Indicates whether the <i>Clear</i> and <i>OK</i> buttons in calendars should be visible.<br/>
            Default is <c>true</c> (configurable in <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.MinDate">
            <summary>
            First date selectable from the dropdown calendar.<br />
            Default is <c>1.1.1900</c> (configurable from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.MaxDate">
            <summary>
            Last date selectable from the dropdown calendar.<br />
            Default is <c>31.12.2099</c> (configurable from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.CalendarDateCustomizationProvider">
            <summary>
            Allows customization of the dates in dropdown calendars.<br />
            Default customization is configurable with <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.Defaults"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.FormatValueAsString(Havit.DateTimeRange)">
            <inheritdocs />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.GetFromParsingErrorMessage">
            <summary>
            Returns message for &quot;from&quot; parsing error.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.GetToParsingErrorMessage">
            <summary>
            Returns message for &quot;to&quot;  parsing error.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1">
            <summary>
            Numeric input.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputNumber">https://havit.blazor.eu/components/HxInputNumber</see>
            </summary>
            <remarks>
            Defaults located in separate non-generic type <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber"/>.
            </remarks>
            <typeparam name="TValue">Supported values: <c>byte (Byte), sbyte (SByte), short (Int16), ushort(UInt16), int (Int32), uint(UInt32), long (Int64), ulong(UInt64), float (Single), double (Double) and decimal (Decimal)</c>.</typeparam>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.ParsingErrorMessage">
            <summary>
            Gets or sets the error message used when displaying an a parsing error.
            Used with String.Format(...), {0} is replaced by Label property, {1} name of bounded property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.InputMode">
            <summary>
            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br/>
            If not set (neither with <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Settings"/> nor <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults"/>, i.e. <c>null</c>),
            the <see cref="F:Havit.Blazor.Components.Web.InputMode.Numeric"/>	will be used for <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals"/> equal to <c>0</c>.
            </summary>
            <remarks>
            We cannot set <see cref="F:Havit.Blazor.Components.Web.InputMode.Decimal"/> for <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals"/> greater that <c>0</c>
            as the users with keyboard locale not matching the application locale won't be able to enter decimal point
            (is <kbd>,</kbd> in some locales and <kbd>.</kbd> in others).<br />
            Feel free to set the InputMode on your own as needed.
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Placeholder">
            <summary>
            Placeholder for the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.LabelType">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.Bootstrap.LabelType" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.Decimals">
            <summary>
            Gets or sets the number of decimal digits.
            Can be used only for floating point types, for integer types throws exception (for values other than 0).
            When not set, 2 decimal digits are used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.DecimalsEffective">
            <summary>
            Gets effective value for Decimals (when not set gets 0 for integer types and 2 for floating point types.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.IsTValueIntegerType">
            <summary>
            Returns <c>true</c> for integer types (<c>false</c> for floating point types).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.FormatValueAsString(`0)">
            <summary>
            Formats the value as a string. Derived classes can override this to determine the formatting used for <c>CurrentValueAsString</c>.
            </summary>
            <param name="value">The value to format.</param>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1.GetParsingErrorMessage">
            <summary>
            Returns message for parsing error.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber">
            <summary>
            Non-generic API for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1"/>.
            Marker for resources for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxAutosuggest`2"/> and derived components.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputPercent`1">
            <summary>
            Numeric input in percentages with value normalization (0% = 0, 100% = 1.0).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputPercent">https://havit.blazor.eu/components/HxInputPercent</see>
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputPercent`1.FormatValueAsString(`0)">
            <summary>
            Converts value into percentages and formats it as a string.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputPercent`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputSwitch">
            <summary>
            Switch input.<br/>
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputSwitch">https://havit.blazor.eu/components/HxInputSwitch</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputSwitch.CoreCssClass">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputCheckbox.CoreCssClass" />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputText">
            <summary>
            Text input (also password, search, etc.)
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputFile"/> and derived components.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputText">https://havit.blazor.eu/components/HxInputText</see>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputText.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Type">
            <summary>
            Input type.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputText.GetElementName">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputText.GetTypeAttributeValue">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/forms/floating-labels/#textareas" target="_blank">Textarea</see>.
            To set a custom height, do not use the rows attribute. Instead, set an explicit height (either inline or via custom CSS).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputTextArea">https://havit.blazor.eu/components/HxInputTextArea</see>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.GetElementName">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextArea.GetTypeAttributeValue">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase">
            <summary>
            Text-based (string) input base class.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.GetDefaults">
            <summary>
            Return <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputText"/> defaults.
            Enables to not share defaults in descandants with base classes.
            Enables to have multiple descendants which differs in the default values.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputText.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.MaxLength">
            <summary>
            The maximum number of characters (UTF-16 code units) that the user can enter.<br />
            If parameter value isn't specified, <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute"/> of the <c>Value</c> is checked and used.<br />
            If not specified either, the user can enter an unlimited number of characters.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.InputMode">
            <summary>
            Hint to browsers as to the type of virtual keyboard configuration to use when editing.<br/>
            Default is <c>null</c> (not set).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.BindEvent">
            <summary>
            Gets or sets the behavior when the model is updated from then input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.Placeholder">
            <summary>
            Placeholder for the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.LabelType">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.Bootstrap.LabelType" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.GetElementName">
            <summary>
            Returns element name to render.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.GetTypeAttributeValue">
            <summary>
            Returns type attribute value.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTextBase.TryParseValueFromString(System.String,System.String@,System.String@)">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2">
            <summary>
            MultiSelect. Unlike a normal select, multiselect allows the user to select multiple options at once.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxMultiSelect">https://havit.blazor.eu/components/HxMultiSelect</see>
            </summary>
            <typeparam name="TValue">Type of values.</typeparam>
            <typeparam name="TItem">Type of items.</typeparam>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.GetDefaults">
            <summary>
            Return <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2"/> defaults.
            Enables to not share defaults in descandants with base classes.
            Enables to have multiple descendants which differs in the default values.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.Data">
            <summary>
            Items to display. 
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.TextSelector">
            <summary>
            Selects text to display from item.<br/>
            When not set, <c>ToString()</c> is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.ValueSelector">
            <summary>
            Selects value from item.<br/>
            Not required when <c>TValue</c> is same as <c>TItem</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.SortKeySelector">
            <summary>
            Selects value for items sorting. When not set, <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.TextSelector"/> property will be used.<br/>
            If you need complex sorting, pre-sort data manually or create a custom comparable property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.AutoSort">
            <summary>
            When set to <c>false</c>, items will no longer be sorted.<br/>
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.EmptyText">
            <summary>
            Text to display when the selection is empty (the <c>Value</c> property is <c>null</c> or empty).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.NullDataText">
            <summary>
            Text to display when <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.Data"/> is <c>null</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.InputGroupEndText">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.FocusAsync">
            <inheritdoc cref="M:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.FocusAsync"/>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.FormatValueAsString(System.Collections.Generic.List{`0})">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.ShouldRenderChipGenerator">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2.GetChipRemoveValue">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect">
            <summary>
            Non-generic API for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2">
            <summary>
            Select. Consider creating custom picker derived from <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2"/>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxRadioButtonList">https://havit.blazor.eu/components/HxRadioButtonList</see>
            </summary>
            <typeparam name="TValue">Type of value.</typeparam>
            <typeparam name="TItem">Type of items.</typeparam>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.ValueSelector">
            <summary>
            Selects value from item.
            Not required when TValueType is same as TItemTime.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.Data">
            <summary>
            Items to display. 
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.TextSelector">
            <summary>
            Selects text to display from item. Also used for chip text.
            When not set <c>ToString()</c> is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.ItemTemplate">
            <summary>
            Gets html to display from item.
            When not set <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.TextSelector"/> is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.SortKeySelector">
            <summary>
            Selects value to sort items. Uses <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.TextSelector"/> property when not set.
            When complex sorting required, sort data manually and don't let sort them by this component. Alternatively create a custom comparable property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonList`2.AutoSort">
            <summary>
            When <c>true</c>, items are sorted before displaying in select.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2">
            <summary>
            Base class for HxRadioList and custom-implemented pickers.
            </summary>
            <typeparam name="TValue">Type of value.</typeparam>
            <typeparam name="TItem">Type of items.</typeparam>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.Inline">
            <summary>
            Allows grouping radios on the same horizontal row by rendering them inline. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.ValueSelectorImpl">
            <summary>
            Selects value from item.
            Not required when TValueType is same as TItemTime.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.DataImpl">
            <summary>
            Items to display. 
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.TextSelectorImpl">
            <summary>
            Gets text to display from item. Used also for chip text.
            When not set ToString() is used.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.ItemTemplateImpl">
            <summary>
            Gets html to display from item.
            When not set <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.TextSelectorImpl"/> is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.SortKeySelectorImpl">
            <summary>
            Selects value to sort items. Uses <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.TextSelectorImpl"/> property when not set.
            When complex sorting required, sort data manually and don't let sort them by this component. Alternatively create a custom comparable property.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.AutoSortImpl">
            <summary>
            When <c>true</c>, items are sorted before displaying in select.
            Default value is <c>true</c>.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.EnabledEffective">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.EnabledEffective" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxRadioButtonListBase`2.TryParseValueFromString(System.String,`0@,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2">
            <summary>
            Select - DropDownList - single-item picker. Consider creating custom picker derived from <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2"/>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxSelect">https://havit.blazor.eu/components/HxSelect</see>
            </summary>
            <typeparam name="TValue">Type of value.</typeparam>
            <typeparam name="TItem">Type of items.</typeparam>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.Nullable">
            <summary>
            Indicates whether <c>null</c> is a valid value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.NullText">
            <summary>
            Text to display for <c>null</c> value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.NullDataText">
            <summary>
            Text to display when <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.Data"/> is <c>null</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.ValueSelector">
            <summary>
            Selects value from item.
            Not required when <c>TValueType</c> is same as <c>TItemTime</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.Data">
            <summary>
            Items to display. 
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.TextSelector">
            <summary>
            Selects text to display from item.
            When not set <c>ToString()</c> is used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.SortKeySelector">
            <summary>
            Selects value to sort items. Uses <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.TextSelector"/> property when not set.
            When complex sorting required, sort data manually and don't let sort them by this component. Alternatively create a custom comparable property.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2.AutoSort">
            <summary>
            When <c>true</c>, items are sorted before displaying in select.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSelect">
            <summary>
            Non-generic API for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2"/> (<see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2"/> and derived components respectively).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2">
            <summary>
            Base class for HxSelect and custom-implemented SELECT-pickers.
            </summary>
            <typeparam name="TValue">Type of value.</typeparam>
            <typeparam name="TItem">Type of items.</typeparam>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.GetDefaults">
            <summary>
            Return <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2"/> defaults.
            Enables to not share defaults in descandants with base classes.
            Enables to have multiple descendants which differs in the default values.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSelect.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.NullableImpl">
            <summary>
            Indicates when <c>null</c> is a valid value.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.NullableEffective">
            <summary>
            Indicates when <c>null</c> is a valid value.
            Uses (in order) to get effective value: Nullable property, RequiresAttribute on bounded property (<c>false</c>) Nullable type on bounded property (<c>true</c>), class (<c>true</c>), default (<c>false</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.NullTextImpl">
            <summary>
            Text to display for <c>null</c> value.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.NullDataTextImpl">
            <summary>
            Text to display when <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.DataImpl"/> is <c>null</c>.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.ValueSelectorImpl">
            <summary>
            Selects value from item.
            Not required when TValue is same as TItem.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.DataImpl">
            <summary>
            Items to display. 
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.TextSelectorImpl">
            <summary>
            Selects text to display from item.
            When not set ToString() is used.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.SortKeySelectorImpl">
            <summary>
            Selects value to sort items. Uses <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.TextSelectorImpl"/> property when not set.
            When complex sorting required, sort data manually and don't let sort them by this component. Alternatively create a custom comparable property.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.AutoSortImpl">
            <summary>
            When <c>true</c>, items are sorted before displaying in select.
            Default value is <c>true</c>.
            Base property for direct setup or to be re-published as <c>[Parameter] public</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.EnabledEffective">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1.EnabledEffective" />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSelectBase`2.TryParseValueFromString(System.String,`0@,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1">
            <summary>
            Displays a list of validation messages for a specified field within a cascaded <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.EditContext"/>.<br />
            Reimplementation of Blazor <see cref="T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1"/> as <see href="https://getbootstrap.com/docs/5.1/forms/validation/">Bootstrap 5 validation</see> (using <c>.invalid-tooltip</c>).<br/>
            Used by <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1"/> and derived components.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxValidationMessage">https://havit.blazor.eu/components/HxValidationMessage</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.CascadingEditContext">
            <summary>
            Cascading EditContext.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.EditContext">
            <summary>
            EditContext. For exceptional use where EditContext is not used as a CascadingParameter.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.For">
            <summary>
            Specifies the field for which validation messages should be displayed.
            Mutual exclusive with <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldName"/> and <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldNames"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldName">
            <summary>
            Specifies the field for which validation messages should be displayed.
            Mutual exclusive with <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.For"/> and <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldNames"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldNames">
            <summary>
            Specifies the field for which validation messages should be displayed.
            Mutual exclusive with <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.For"/> and <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.ForFieldName"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.#ctor">
            <summary>
            Constructs an instance of <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxValidationMessage`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem">
            <summary>
            Item for <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.PredefinedDates" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem.Label">
            <summary>
            Custom label.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem.ResourceType">
            <summary>
            Resource type for IStringLocalizer&lt;ResourceType&gt; where the localization will be searched.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDatePredefinedDatesItem.Date">
            <summary>
            Date.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem">
            <summary>
            Item for <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.PredefinedDateRanges" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem.Label">
            <summary>
            Custom label.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem.ResourceType">
            <summary>
            Resource type for IStringLocalizer&lt;ResourceType&gt; where the localization will be searched.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangePredefinedRangesItem.DateRange">
            <summary>
            Date range.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings">
            <summary>
            Settings for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings.ShowCalendarButtons">
            <summary>
            Indicates whether the <i>Clear</i> and <i>OK</i> buttons in calendars should be visible.<br/>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings.MinDate">
            <summary>
            First date selectable from the dropdown calendar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings.MaxDate">
            <summary>
            Last date selectable from the dropdown calendar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings.CalendarDateCustomizationProvider">
            <summary>
            Allows customization of the dates in dropdown calendars.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings.ShowPredefinedDateRanges">
            <summary>
            When enabled, shows predefined day ranges (from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDateRange.PredefinedDateRanges"/>, e.g. Today).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateRangeSettings.PredefinedDateRanges">
            <summary>
            Predefined date ranges to be displayed.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings">
            <summary>
            Settings for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings.CalendarIcon">
            <summary>
            Optional icon to display within the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings.ShowCalendarButtons">
            <summary>
            Indicates whether the <i>Clear</i> and <i>OK</i> buttons in calendar should be visible.<br/>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings.MinDate">
            <summary>
            First date selectable from the dropdown calendar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings.MaxDate">
            <summary>
            Last date selectable from the dropdown calendar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings.CalendarDateCustomizationProvider">
            <summary>
            Allows customization of the dates in dropdown calendars.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings.ShowPredefinedDates">
            <summary>
            When enabled, shows predefined days (from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputDate`1.PredefinedDates"/>, e.g. Today).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputDateSettings.PredefinedDates">
            <summary>
            Predefined dates to be displayed.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputNumber`1"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputNumberSettings.InputMode">
            <summary>
            Hint to browsers as to the type of virtual keyboard configuration to use when editing.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.InputSizeExtensions.AsFormControlCssClass(Havit.Blazor.Components.Web.Bootstrap.InputSize)">
            <summary>
            Returns CSS class to render input (form-control) with desired size.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.InputSizeExtensions.AsInputGroupCssClass(Havit.Blazor.Components.Web.Bootstrap.InputSize)">
            <summary>
            Returns CSS class to render input-group with desired size.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.InputSizeExtensions.AsFormSelectCssClass(Havit.Blazor.Components.Web.Bootstrap.InputSize)">
            <summary>
            Returns CSS class to render select (form-select) with desired size.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputTextSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputText"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTextSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTextSettings.InputMode">
            <summary>
            Hint to browsers as to the type of virtual keyboard configuration to use when editing.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.LabelType">
            <summary>
            Label type.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.LabelType.Regular">
            <summary>
            Regular.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.LabelType.Floating">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/forms/floating-labels/">Floating label</see>. (Not supported on all components.)
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.MultiSelectSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMultiSelect`2"/> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MultiSelectSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox">
            <summary>
            Non-generic API for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1"/> and derived components.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1">
            <summary>
            A search input component witch automatic suggestions, initial dropdown template and free-text queries support.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxSearchBox">https://havit.blazor.eu/components/HxSearchBox</see>
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DataProvider">
            <summary>
            Method (delegate) which provides data of the suggestions.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.Enabled">
            <summary>
            Allows you to disable the input. Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.TextQuery">
            <summary>
            Text written by the user (input text).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InvokeTextQueryChangedAsync(System.String)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.TextQueryChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.OnTextQueryTriggered">
            <summary>
            Raised, when the enter key is pressed or when the text-query item is selected in the dropdown menu.
            (Does not trigger when <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery"/> is <c>false</c>.)
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InvokeOnTextQueryTriggeredAsync(System.String)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.OnTextQueryTriggered"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.OnItemSelected">
            <summary>
            Occurs, when any of suggested items (other than plain text-query) is selected.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InvokeOnItemSelectedAsync(`0)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.OnItemSelected"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.Placeholder">
            <summary>
            Placeholder text for the search input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.ItemTitleSelector">
            <summary>
            Selector to display item title from data item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.ItemSubtitleSelector">
            <summary>
            Selector to display item subtitle from data item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.ItemIconSelector">
            <summary>
            Selector to display icon from data item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.ItemTemplate">
            <summary>
            Template for the item content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.TextQueryItemTemplate">
            <summary>
            Template for the text-query item content (requires <c><see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery"/>="true"</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.NotFoundTemplate">
            <summary>
            Rendered when the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DataProvider" /> doesn't return any data.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DefaultContentTemplate">
            <summary>
            Rendered when no input is entered (i.e. initial state).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.CssClass">
            <summary>
            Additional css classes for the dropdown.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.ItemCssClass">
            <summary>
            Additional CSS classes for the items in the dropdown menu.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InputCssClass">
            <summary>
            Additional CSS classes for the search box input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.SearchIcon">
            <summary>
            Icon of the input, when no text is written.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.ClearIcon">
            <summary>
            Icon of the input, when text is written allowing the user to clear the text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DropdownOffset">
            <summary>
            Offset between the dropdown and the input.
            <see href="https://popper.js.org/docs/v2/modifiers/offset/#options"/>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.Label">
            <summary>
            Label of the input field.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.LabelType">
            <summary>
            Label type of the input field.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InputSize">
            <summary>
            Input size of the input field.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.MinimumLength">
            <summary>
            Minimum lenght to call the data provider (display any results). Default is <c>2</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.Delay">
            <summary>
            Debounce delay in miliseconds. Default is <c>300</c> ms.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.AllowTextQuery">
            <summary>
            Indicates whether text-query mode is enabled (accepts free text in addition to suggested items).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InputGroupEndText">
            <summary>
            Input-group at the end of the input.<br/>
            Hides the search icon when used!
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.<br/>
            Hides the search icon when used!
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.textQueryHasBeenBelowMinimumLength">
            <summary>
            Shows whether the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.TextQuery"/> has been below minimum required length recently (before data provider loading is completed).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.ShouldDropdownMenuBeDisplayed">
            <summary>
            If the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1.DefaultContentTemplate"/> is empty, we don't want to display anything when nothing (or below the minimum amount of characters) is typed into the input.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderDelegate`1">
            <summary>
            Data provider (delegate).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderRequest">
            <summary>
            Data provider request for search box data.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderRequest.UserInput">
            <summary>
            Current input entered in the search box.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderRequest.CancellationToken">
            <summary>
            The <see cref="T:System.Threading.CancellationToken"/> used to relay cancellation of the request.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderResult`1">
            <summary>
            Data provider result for search box data.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxDataProviderResult`1.Data">
            <summary>
            Items provided by the request.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSearchBox`1"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings.SearchIcon">
            <summary>
            Icon displayed in input when no item is selected.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings.ClearIcon">
            <summary>
            Icon displayed in input on selection clear button when item is selected.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings.MinimumLength">
            <summary>
            Minimal number of characters to start suggesting.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings.Delay">
            <summary>
            Debounce delay in miliseconds.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings.CssClass">
            <summary>
            Additional CSS classes for the wrapping <c>div</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings.ItemCssClass">
            <summary>
            Additional CSS classes for the items in the dropdown menu.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SearchBoxSettings.InputCssClass">
            <summary>
            Additional CSS classes for the search box input.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SelectSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSelect`2"/> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SelectSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridCellTemplate">
            <summary>
            Cell template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridCellTemplate.Template">
            <summary>
            Template to render cell.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridCellTemplate.CssClass">
            <summary>
            Css class of the cell.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.GridCellTemplate.Create(Microsoft.AspNetCore.Components.RenderFragment,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode">
            <summary>
            Strategy how data are displayed in the grid (and loaded to the grid).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.Pagination">
            <summary>
            Use pager.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.InfiniteScroll">
            <summary>
            Use infinite scroll (virtualized).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderDelegate`1">
            <summary>
            Data provider (delegate).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderRequest`1">
            <summary>
            Data provider request for grid data.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderRequest`1.StartIndex">
            <summary>
            The number of records to skip. In paging mode it equals to the the page size * page index requested.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderRequest`1.Count">
            <summary>
            The number od records to return. In paging mode it equals to the size of the page.				
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderRequest`1.Sorting">
            <summary>
            Current sorting.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderRequest`1.CancellationToken">
            <summary>
            The <see cref="T:System.Threading.CancellationToken"/> used to relay cancellation of the request.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderRequest`1.ApplyTo(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Process data on client side (process sorting &amp; paging) and returns result for the grid.
            </summary>
            <param name="data">data to process (paging and sorting will be applied)</param>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderResult`1">
            <summary>
            Data provider result for grid data.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderResult`1.Data">
            <summary>
            The provided items by the request.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderResult`1.TotalCount">
            <summary>
            The total item count in the source (for pagination and infinite scroll).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext">
            <summary>
            Grid footer cell context.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext.TotalCount">
            <summary>
            Total count of items in the grid (includes all pages).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext">
            <summary>
            Grid header cell context.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext.TotalCount">
            <summary>
            Total count of items in the grid (includes all pages).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext">
            <summary>
            Placeholder cell context.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext.Index">
            <summary>
            Index of the row.		
            It reflects current page index when <see cref="F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.Pagination" /> mode is used
            (ie. when the page size is 10, then on the third page indexes are 20-29).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.ContentNavigationMode">
            <summary>
            Strategy how data are displayed in the grid (and loaded to the grid).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.SortAscendingIcon">
            <summary>
            Icon to display ascending sort direction.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.SortDescendingIcon">
            <summary>
            Icon to display descending sort direction.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.ItemRowHeight">
            <summary>
            Height of the item row used for infinite scroll calculations (<see cref="F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.InfiniteScroll"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.OverscanCount">
            <summary>
            Infinite scroll (<see cref="F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.InfiniteScroll"/>):
            Gets or sets a value that determines how many additional items will be rendered
            before and after the visible region. This help to reduce the frequency of rendering
            during scrolling. However, higher values mean that more elements will be present
            in the page.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.PageSize">
            <summary>
            Page size for <see cref="F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.Pagination"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.PlaceholdersRowCount">
            <summary>
            Number of rows with placeholders to render.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.ShowFooterWhenEmptyData">
            <summary>
            Indicates whether to render footer when data are empty.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.TableContainerCssClass">
            <summary>
            Custom CSS class to render with <c>div</c> element wrapping the main <c>table</c>
            (<see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPager"/> is not wrapped in this <c>div</c> element).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.TableCssClass">
            <summary>
            Custom CSS class to render with main <c>table</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.HeaderRowCssClass">
            <summary>
            Custom CSS class to render with header <c>tr</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.ItemRowCssClass">
            <summary>
            Custom CSS class to render with data <c>tr</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.FooterRowCssClass">
            <summary>
            Custom CSS class to render with footer <c>tr</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.PagerCssClass">
            <summary>
            Custom CSS class to render with pager.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.Responsive">
            <summary>
            Allows the table to be scrolled horizontally with ease accross any breakpoint (adds the <c>table-responsive</c> class to the table).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.Hover">
            <summary>
            Enables hover state on table rows within a <c>&lt;tbody&gt;</c> (sets the <c>table-hover</c> class on the table).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridSettings.Striped">
            <summary>
            Adds zebra-striping to any table row within the <c>&lt;tbody&gt;</c> (alternating rows).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.GridUserState`1">
            <summary>
            User state of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridUserState`1.PageIndex">
            <summary>
            Current page index.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.GridUserState`1.Sorting">
            <summary>
            Current sorting.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.GridUserState`1.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{Havit.Blazor.Components.Web.Bootstrap.SortingItem{`0}})">
            <summary>
            Constructor.
            </summary>
            <remarks>
            For backward compatibility in custom projects.
            Once upon a time this one was the only constructor.
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.GridUserState`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1">
            <summary>
            Column for displaying the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenu"/> in the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.Order">
            <summary>
            The order (display index) of the column.
            Columns are displayed in the order of this property.
            Columns with the same value are displayed in the order of appereance in the code (when the columns are not conditionaly displayed using @if).
            </summary>
            <exception cref="T:System.ArgumentException">Value is <c>Int32.MinValue</c> or <c>Int32.MaxValue</c>.</exception>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.ItemCssClass">
            <summary>
            Returns item css class (not dependent on data).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.ItemCssClassSelector">
            <summary>
            Returns item css class for the specific date item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.ChildContent">
            <summary>
            Context menu template.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.GetHeaderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.GetItemCellTemplate(`0)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.GetItemPlaceholderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.GetFooterCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.GetSorting">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1.GetColumnOrder">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1">
            <summary>
            Grid to display tabular data from data source. Includes support for client-side and server-side paging &amp; sorting (or virtualized scrolling as needed).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxGrid">https://havit.blazor.eu/components/HxGrid</see>
            </summary>
            <typeparam name="TItem">Type of row data item.</typeparam>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.ColumnsRegistrationCascadingValueName">
            <summary>
            ColumnsRegistration cascading value name.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.DataProvider">
            <summary>
            Data provider for items to render.<br />
            The provider should always return instance of <see cref="T:Havit.Blazor.Components.Web.Bootstrap.GridDataProviderResult`1"/>, <c>null</c> is not allowed.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectionEnabled">
            <summary>
            Indicates whether single data item selection is enabled. 
            Selection is performed by click on the item row.
            Can be combined with multiselection.
            Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.MultiSelectionEnabled">
            <summary>
            Indicates whether multi data items selection is enabled. 
            Selection is performed by checkboxes in the first column.
            Can be combined with (single) selection.
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.Columns">
            <summary>
            Columns template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.ContextMenu">
            <summary>
            Context menu template (positioned as last column).<br/>
            NOTE: This parameter will be most likely removed in vNext, use <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxContextMenuGridColumn`1"/> in <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.Columns"/> instead.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.LoadingDataTemplate">
            <summary>
            Template to render when "first" data are loading.
            This template is not used when loading data for sorting or paging operations.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.EmptyDataTemplate">
            <summary>
            Template to render when there is empty Data (but not <c>null</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItem">
            <summary>
            Selected data item.
            Intended for data binding.
            </summary>		
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItemChanged">
            <summary>
            Event fires when selected data item changes.
            Intended for data binding.
            </summary>		
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.InvokeSelectedDataItemChangedAsync(`0)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItemChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItems">
            <summary>
            Selected data items.
            Intended for data binding.
            </summary>		
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItemsChanged">
            <summary>
            Event fires when selected data items changes.
            Intended for data binding.
            </summary>		
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.InvokeSelectedDataItemsChangedAsync(System.Collections.Generic.HashSet{`0})">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.SelectedDataItemsChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.ContentNavigationMode">
            <summary>
            Strategy how data are displayed in the grid (and loaded to the grid).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.PageSize">
            <summary>
            Page size for <see cref="F:Havit.Blazor.Components.Web.Bootstrap.GridContentNavigationMode.Pagination"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.ShowFooterWhenEmptyData">
            <summary>
            Indicates whether to render footer when data are empty.
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.CurrentUserState">
            <summary>
            Current grid state (page, sorting).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.CurrentUserStateChanged">
            <summary>
            Event fires when grid state is changed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.InvokeCurrentUserStateChangedAsync(Havit.Blazor.Components.Web.Bootstrap.GridUserState{`0})">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.CurrentUserStateChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.InProgress">
            <summary>
            Indicates when the grid should be displayed as "in progress".
            When not set (<c>null</c>), grid progress is automatically tracked when retrieving data by data provider.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.TableContainerCssClass">
            <summary>
            Custom CSS class to render with <c>div</c> element wrapping the main <c>table</c> (<see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPager"/> is not wrapped in this <c>div</c> element).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.TableCssClass">
            <summary>
            Custom CSS class to render with main <c>table</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.HeaderRowCssClass">
            <summary>
            Custom CSS class to render with header <c>tr</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.ItemRowCssClass">
            <summary>
            Custom CSS class to render with data <c>tr</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.ItemRowHeight">
            <summary>
            Height of the item row used for infinite scroll calculations.
            Default value is <c>41px</c> (row-height of regular table-row within Bootstrap 5 default theme).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.ItemRowCssClassSelector">
            <summary>
            Returns custom CSS class to render with data <c>tr</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.FooterRowCssClass">
            <summary>
            Custom CSS class to render with footer <c>tr</c> element.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.PagerCssClass">
            <summary>
            Custom CSS class to add to the pager.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.PlaceholdersRowCount">
            <summary>
            Number of rows with placeholders to render.
            When value is zero, placeholders are not used.
            When <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.LoadingDataTemplate" /> is set, placeholder are not used.
            Default is <c>5</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.OverscanCount">
            <summary>
            Infinite scroll:
            Gets or sets a value that determines how many additional items will be rendered
            before and after the visible region. This help to reduce the frequency of rendering
            during scrolling. However, higher values mean that more elements will be present
            in the page.<br/>
            Default is <c>50</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.Responsive">
            <summary>
            Allows the table to be scrolled horizontally with ease accross any breakpoint (adds the <c>table-responsive</c> class to the table).<br/>
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.Hover">
            <summary>
            Enables hover state on table rows within a <c>&lt;tbody&gt;</c> (sets the <c>table-hover</c> class on the table).<br />
            If not set (default) the table is hoverable when selection is enabled.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.Striped">
            <summary>
            Adds zebra-striping to any table row within the <c>&lt;tbody&gt;</c> (alternating rows).<br />
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.GetColumnsToRender">
            <summary>
            Returns columns to render.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.GetTableElementCssClass(System.Boolean)">
            <summary>
            Returns CSS class for the <c>&lt;table&gt;</c> element.
            </summary>
            <remarks>
            Overriden in 176.BT2 project to allow setting background-color for grids with selected items.
            </remarks>
            <param name="rendersData">Indicates whether the grid renders data (<c>false</c> when the grid has no items to render or the data have not been loaded yet).</param>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.GetDefaultSorting">
            <summary>
            Returns default sorting if set.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.CreateGridHeaderCellContext">
            <summary>
            Returns grid header cell context.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.CreateGridFooterCellContext">
            <summary>
            Returns grid footer cell context.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.RefreshDataAsync">
            <summary>
            Instructs the component to re-request data from its <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.DataProvider"/>.
            This is useful if external data may have changed.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the completion of the operation.</returns>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid">
            <summary>
            Non-generic API for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1"/> component.
            </summary>
            <remarks>
            Marker for resources for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1"/>.
            It is unfriendly to create resources for generic classes.
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGrid.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1"/> and derived components.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1">
            <summary>
            Grid column.
            </summary>
            <typeparam name="TItem">Grid row data type.</typeparam>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.Visible">
            <summary>
            Indicates whether the column is visible (otherwise the column is hidden).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.Order">
            <summary>
            The order (display index) of the column.
            Columns are displayed in the order of this property.
            Columns with the same value are displayed in the order of appereance in the code (when the columns are not conditionaly displayed using @if).
            </summary>
            <exception cref="T:System.ArgumentException">Value is <c>Int32.MinValue</c> or <c>Int32.MaxValue</c>.</exception>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.HeaderText">
            <summary>
            Header cell text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.HeaderTemplate">
            <summary>
            Header cell template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.HeaderCssClass">
            <summary>
            Header cell css class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.ItemTextSelector">
            <summary>
            Returns text for the item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.ItemTemplate">
            <summary>
            Returns template for the item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.ItemCssClass">
            <summary>
            Returns item css class (not dependent on data).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.ItemCssClassSelector">
            <summary>
            Returns item css class for the specific date item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.PlaceholderTemplate">
            <summary>
            Placeholder cell template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.FooterText">
            <summary>
            Footer cell text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.FooterTemplate">
            <summary>
            Footer cell template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.FooterCssClass">
            <summary>
            Footer cell css class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.SortString">
            <summary>
            Returns column sorting as string.
            Use to set sorting as a string, ie. to get value to pass to backend.
            Ignored for client-side sorting.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.SortKeySelector">
            <summary>
            Returns column sorting expression for automatic grid sorting.
            To be used for &quot;strongly typed&quot; setting of sorting, required for client-side sorting.
            Must be <see cref="T:System.IComparable"/>.
            Sorting of the column does not support multiple expressions. Create an artifcial property and implement <see cref="T:System.IComparable"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.SortDirection">
            <summary>
            Initial sorting direction. Default is <see cref="F:Havit.Collections.SortDirection.Ascending" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.IsDefaultSortColumn">
            <summary>
            Indicates the sorting on the column is default (primary) on the grid.
            Set <c>true</c> for the column which is to be used for default sorting.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.IsColumnVisible">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.GetColumnOrder">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.GetHeaderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.GetItemCellTemplate(`0)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.GetItemPlaceholderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.GetFooterCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1.GetSorting">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1">
            <summary>
            Grid column base class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.ColumnsRegistration">
            <summary>
            Cascading parameter to register column to the grid.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.Havit#Blazor#Components#Web#Bootstrap#IHxGridColumn{TItem}#IsVisible">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.Havit#Blazor#Components#Web#Bootstrap#IHxGridColumn{TItem}#GetOrder">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.Havit#Blazor#Components#Web#Bootstrap#IHxGridColumn{TItem}#GetHeaderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.Havit#Blazor#Components#Web#Bootstrap#IHxGridColumn{TItem}#GetItemCellTemplate(`0)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.Havit#Blazor#Components#Web#Bootstrap#IHxGridColumn{TItem}#GetItemPlaceholderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.Havit#Blazor#Components#Web#Bootstrap#IHxGridColumn{TItem}#GetFooterCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.Havit#Blazor#Components#Web#Bootstrap#IHxGridColumn{TItem}#GetSorting">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.IsColumnVisible">
            <summary>
            Indicates whether the column is visible (otherwise the column is hidden).
            It is not suitable to conditionaly display the column using @if statement in the markup code.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.GetColumnOrder">
            <summary>
            Returns the column order.
            </summary>
            <remarks>
            Currently it ensures the correct order of MultiSelectGridColumn when enabled dynamically.		
            In future we can implement better in <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGridColumn`1"/> to enable dynamic column order.
            </remarks>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.GetHeaderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext)">
            <summary>
            Returns header cell template.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.GetItemCellTemplate(`0)">
            <summary>
            Returns data cell template for the specific item.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.GetItemPlaceholderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext)">
            <summary>
            Returns placeholder cell template.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.GetFooterCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext)">
            <summary>
            Returns footer cell template.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.GetSorting">
            <summary>
            Returns column sorting.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxGridColumnBase`1.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxPager">
            <summary>
            Pager.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxPager">https://havit.blazor.eu/components/HxPager</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPager.TotalPages">
            <summary>
            Total pages of data items.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPager.CurrentPageIndex">
            <summary>
            Current page index. Zero based.
            Displayed numbers start with 1 which is page index 0.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPager.CurrentPageIndexChanged">
            <summary>
            Event raised where page index is changed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxPager.InvokeCurrentPageIndexChangedAsync(System.Int32)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxPager.CurrentPageIndexChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPager.DisplayNumberCount">
            <summary>
            Count of numbers to display. Default value is 10.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPager.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxPager.SetCurrentPageIndexTo(System.Int32)">
            <summary>
            Changes current page index and fires event.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.IHxGridColumn`1">
            <summary>
            Grid column.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.IHxGridColumn`1.IsVisible">
            <summary>
            Indicates whether the column is visible (otherwise the column is hidden).
            It is not suitable to conditionaly display the column using @if statement in the markup code.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.IHxGridColumn`1.GetOrder">
            <summary>
            Get column order (for scenarios where column order can be modified).
            Default should be <c>0</c>.
            When columns have same order they should render in the order of their registration (Which is usually the same as the column appereance in the source code.
            But it differs when the column is displayed conditionaly using @if statement.).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.IHxGridColumn`1.GetSorting">
            <summary>
            Sorting of the column.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.IHxGridColumn`1.GetHeaderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridHeaderCellContext)">
            <summary>
            Returns header cell template.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.IHxGridColumn`1.GetItemCellTemplate(`0)">
            <summary>
            Returns data cell template for the specific item.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.IHxGridColumn`1.GetItemPlaceholderCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridPlaceholderCellContext)">
            <summary>
            Returns placeholder cell template.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.IHxGridColumn`1.GetFooterCellTemplate(Havit.Blazor.Components.Web.Bootstrap.GridFooterCellContext)">
            <summary>
            Returns footer cell template.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1">
            <summary>
            Item describes one sorting criteria.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.SortString">
            <summary>
            Sorting as string value. Can be used to pass value between application layers (ie. WebAPI call parameter).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.SortKeySelector">
            <summary>
            Selector function of sorting key. To be used for automatic in-memory sorting.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.SortDirection">
            <summary>
            Sort direction of SortString/SortKeySelector.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.SortDefaultOrder">
            <summary>
            Not-null for default sort item.
            For multiple sort items, set value in ascendant order.
            </summary>
            <remarks>
            Current implementation of grid columns uses only null and zero values.
            </remarks>
            <example>
            To set default sorting by LastName, then FirstName use value 1 for LastName and value 2 for FirstName).
            </example>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.IComparable}},Havit.Collections.SortDirection,System.Nullable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.EqualsIgnoringSortDirection``1(Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0})">
            <summary>
            Returns true when this and sorting item describes the same sorting (direction is ignored).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.WithToggledSortDirection">
            <summary>
            Returns the SortItem describing the same sorting with toggled direction.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.ToString">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SortingItemExtensions">
            <summary>
            Sorting extension methods.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItemExtensions.ApplySorting``1(System.Collections.Generic.IReadOnlyList{Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}},Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}[])">
            <summary>
            Applies itemsToMerge items to source items of sorting.
            When source starts with itemsToMerge, sort direction toggles.
            Otherwise itemsToMerges prepends source (and remove possible duplicities).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItemExtensions.StartsWith``1(System.Collections.Generic.IReadOnlyList{Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}},Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}[])">
            <summary>
            Returns <c>true</c> when source sortings starts with itemsToMerge.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItemExtensions.ToggleSortDirections``1(System.Collections.Generic.IEnumerable{Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}})">
            <summary>
            Returns source with toggles sort direction.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItemExtensions.Excluding``1(System.Collections.Generic.IEnumerable{Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}},Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}[])">
            <summary>
            Returns source without itemsToMerge.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItemExtensions.ToGenericPropertyComparer``1(System.Collections.Generic.IEnumerable{Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}})">
            <summary>
            Creates GenericPropertyComparer for the sorting by <see cref="P:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.SortString"/> and <see cref="P:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1.SortDirection"/> properties.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.SortingItemExtensions.ToSortItems``1(System.Collections.Generic.IEnumerable{Havit.Blazor.Components.Web.Bootstrap.SortingItem{``0}})">
            <summary>
            Converts <see cref="T:Havit.Blazor.Components.Web.Bootstrap.SortingItem`1"/> to <see cref="T:Havit.Collections.SortItem"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon">
            <summary>
            Bootstrap icon.
            </summary>
            <remarks>
            To bootstrap icons update you need:
            - Update wwwroot\fonts\bootstrap-icons.woff
            - Update wwwroot\fonts\bootstrap-icons.woff2
            - Update wwwroot\bootstrap-icons.css
            - Update bootstrap-icons.json in this folder.
            BootstrapIcon.Xy properties will be generated by a source generator.
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon.RendererComponentType">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.IconBase.RendererComponentType" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon.Name">
            <summary>
            Name of the bootstrap icon.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.BootstrapIcon.#ctor(System.String)">
            <summary>
            Constructor. Private.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxBootstrapIcon">
            <summary>
            Displays bootstrap icon. See <see href="https://icons.getbootstrap.com/">https://icons.getbootstrap.com/</see>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBootstrapIcon.Icon">
            <summary>
            Icon to display.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBootstrapIcon.CssClass">
            <summary>
            CSS Class to combine with basic icon CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBootstrapIcon.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxBootstrapIcon.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxListLayout">
            <summary>
            Non-generic API for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1"/> and derived components.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxListLayout.NoFilter">
            <summary>
            Can be used for TFilterModelType to express there is no filter in the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxListLayout"/> component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1">
            <summary>
            Data presentation component composed of <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid"/> for data, <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"/> for manual filtering and <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNamedViewList`1"/> for pre-defined filters.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxListLayout">https://havit.blazor.eu/components/HxListLayout</see>
            </summary>
            <typeparam name="TFilterModel"></typeparam>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.GetDefaults">
            <summary>
            Returns <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox"/> defaults.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.InvokeFilterModelChangedAsync(`0)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.FilterModelChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.CardSettings">
            <summary>
            Settings for the wrapping <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCard"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.FilterOpenButtonSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> opening filtering offcanvas.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.FilterSubmitButtonSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> submitting the filter.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1.FilterOffcanvasSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"/> with the filter.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent">
            <summary>
            Interface for column-sized components (e.g. <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.Columns">
            <summary>
            Number of template columns to span. Responsive setting for all devices including the extra-small ones (XS) bellow "small" breakpoint (<c>576px</c>).<br />
            The value can be any integer number between <c>1</c> and <c>12</c> (<c>.col-1</c>), <c>auto</c> (<c>.col-auto</c>) or <c>true</c> (<c>.col</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsSmallUp">
            <summary>
            Number of template columns to span for viewports above "small" breakpoint (<c>576px</c>).<br/>
            The value can be any integer number between <c>1</c> and <c>12</c>, <c>auto</c> or <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsMediumUp">
            <summary>
            Number of template columns to span for viewports above "medium" breakpoint (<c>768px</c>).<br/>
            The value can be any integer number between <c>1</c> and <c>12</c>, <c>auto</c> or <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsLargeUp">
            <summary>
            Number of template columns to span for viewports above "large" breakpoint (<c>992px</c>).<br/>
            The value can be any integer number between <c>1</c> and <c>12</c>, <c>auto</c> or <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsExtraLargeUp">
            <summary>
            Number of template columns to span for viewports above "large" breakpoint (<c>1200px</c>).<br/>
            The value can be any integer number between <c>1</c> and <c>12</c>, <c>auto</c> or <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsXxlUp">
            <summary>
            Number of template columns to span for viewports above "XXL" breakpoint (<c>1400px</c>).<br/>
            The value can be any integer number between <c>1</c> and <c>12</c>, <c>auto</c> or <c>true</c>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.Layouts.LayoutColumnComponentExtensions.GetColumnsCssClasses(Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent)">
            <summary>
            Returns CSS classes representing column layout of the component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxListLayout"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings.CardSettings">
            <summary>
            Settings for the wrapping <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCard"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings.FilterOpenButtonSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> opening filtering offcanvas.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings.FilterSubmitButtonSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> submitting the filter.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ListLayoutSettings.FilterOffcanvasSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"/> with the filter.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxListGroup">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/list-group/">Bootstrap 5 List group</see> component.<br/>
            List groups are a flexible and powerful component for displaying a series of content.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxListGroup">https://havit.blazor.eu/components/HxListGroup</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.ChildContent">
            <summary>
            Content of the list group component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.Flush">
            <summary>
            If set to <c>true</c>, removes borders and rounded corners to render list group items edge-to-edge.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.Numbered">
            <summary>
            Set to <c>true</c> to opt into numbered list group items. The list group changes from an unordered list to an ordered list.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.Horizontal">
            <summary>
            Changes the layout of the list group items from vertical to horizontal. Cannot be combined with <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.Flush"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroup.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxListGroup"/> component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem">
            <summary>
            Item for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxListGroup"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.ChildContent">
            <summary>
            Content of the item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.Active">
            <summary>
            Indicates the current active selection.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.Enabled">
            <summary>
            Make the item appear disabled by setting to <c>false</c>.
            Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.Color">
            <summary>
            Color.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.OnClick">
            <summary>
            An event that is fired when the <c>HxListGroupItem</c> is clicked.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.InvokeOnClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.OnClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItem.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/list-group/#links-and-buttons">Bootstrap 5 List group link item</see> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.Href">
            <summary>
            Navigation target.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.Text">
            <summary>
            Text of the item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.Match">
            <summary>
            URL matching behavior for the underlying <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/>.
            Default is <see cref="F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix"/>.
            You can set the value to <c>null</c> to disable the matching.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.OnClick">
            <summary>
            Raised when the item is clicked.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.InvokeOnClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.OnClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.Active">
            <summary>
            Indicates the current active selection.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.Enabled">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.ChildContent">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxListGroupItemNavLink.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/> component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal">
            <summary>
            Responsive horizontal setting (breakpoint) for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxListGroup"/>.
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal.Never"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal.Never">
            <summary>
            Never Horizontal, always vertical.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal.SmallUp">
            <summary>
            Horizontal for viewports above "small" breakpoint (<c>576px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal.MediumUp">
            <summary>
            Horizontal for viewports above "medium" breakpoint (<c>768px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal.LargeUp">
            <summary>
            Horizontal for viewports above "large" breakpoint (<c>992px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal.ExtraLargeUp">
            <summary>
            Horizontal for viewports above "extra-large" breakpoint (<c>1200px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal.XxlUp">
            <summary>
            Horizontal for viewports above "XXL" breakpoint (<c>1400px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ListGroupHorizontal.Always">
            <summary>
            Always horizontal, never vertical.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.DialogResult`1">
            <summary>
            Result of the dialog.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.DialogResult`1.Successful">
            <summary>
            <c>True</c> when the dialog has successful result, <c>false</c> then it was cancelled.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.DialogResult`1.Value">
            <summary>
            The value of the sucessful result.
            </summary>
            <exception cref="T:System.InvalidOperationException">When the dialog is not successful.</exception>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.DialogResult`1.#ctor(System.Boolean,`0)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.DialogResult`1.CreateCancelled">
            <summary>
            Returns new instance for cancelled dialog.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.DialogResult`1.CreateSuccessful(`0)">
            <summary>
            Returns new instance for successful dialog.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxDialogBase`1">
            <summary>
            Base class to simplify custom modal dialog implementation.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxDialogBase">https://havit.blazor.eu/components/HxDialogBase</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxDialogBase`1.Modal">
            <summary>
            Returns the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxModal"/> component which this component control. Override when you do not want to use modal field set using @ref.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDialogBase`1.ShowAsync">
            <summary>
            Shows the modal and waits until it is hidden.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDialogBase`1.HideAsync(`0)">
            <summary>
            Hides the modal and sets the value.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxDialogBase`1.HideAsCancelledAsync">
            <summary>
            Hides the modal as cancelled (no value is set).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox">
            <summary>
            Component to display message-boxes.<br/>
            Usually used via <see cref="T:Havit.Blazor.Components.Web.HxMessageBoxService"/> and <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost"/>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxMessageBox">https://havit.blazor.eu/components/HxMessageBox</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.GetDefaults">
            <summary>
            Returns <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox"/> defaults.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.Title">
            <summary>
            Title text (Header).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.HeaderTemplate">
            <summary>
            Header template (Header).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.Text">
            <summary>
            Content (body) text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.BodyTemplate">
            <summary>
            Body (content) template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.ShowCloseButton">
            <summary>
            Indicates whether to show the close button.
            Default is taken from the underlying <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxModal"/> (<c>true</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.Buttons">
            <summary>
            Buttons to show. Default is <see cref="F:Havit.Blazor.Components.Web.MessageBoxButtons.Ok"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.PrimaryButton">
            <summary>
            Primary button (if you want to override the default).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.CustomButtonText">
            <summary>
            Text for <see cref="F:Havit.Blazor.Components.Web.MessageBoxButtons.Custom"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.PrimaryButtonSettings">
            <summary>
            Settings for the dialog primary button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.SecondaryButtonSettings">
            <summary>
            Settings for dialog secondary button(s).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.ModalSettings">
            <summary>
            Settings for underlying <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxModal"/> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.OnClosed">
            <summary>
            Raised when the message box gets closed. Returns the button clicked.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.InvokeOnClosedAsync(Havit.Blazor.Components.Web.MessageBoxButtons)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.OnClosed"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxModal"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox.ShowAsync">
            <summary>
            Displays the message box.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBoxHost">
            <summary>
            Displays message boxes initiated through <see cref="T:Havit.Blazor.Components.Web.IHxMessageBoxService"/>.
            To be placed in root application component / main layout.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxModal">
            <summary>
            Component to render modal dialog as a <see href="https://getbootstrap.com/docs/5.1/components/modal/">Bootstrap Modal</see>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxModal">https://havit.blazor.eu/components/HxModal</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxGrid`1"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Title">
            <summary>
            Title in modal header.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.HeaderTemplate">
            <summary>
            Header template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.BodyTemplate">
            <summary>
            Body template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.FooterTemplate">
            <summary>
            Footer template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Size">
            <summary>
            Size of the modal. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ModalSize.Regular"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Fullscreen">
            <summary>
            Fullscreen behavior of the modal. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.Disabled"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.ShowCloseButton">
            <summary>
            Indicates whether the modal shows close button in header.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.CloseButtonIcon">
            <summary>
            Close icon to be used in header.
            If set to <c>null</c>, Bootstrap default close-button will be used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.CloseOnEscape">
            <summary>
            Indicates whether the modal closes when escape key is pressed.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.UseStaticBackdrop">
            <summary>
            Indicates whether the modal uses a static backdrop.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Scrollable">
            <summary>
            Allows scrolling the modal body. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.Centered">
            <summary>
            Allows vertical centering of the modal.<br/>
            Default is <c>false</c> (horizontal only).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.CssClass">
            <summary>
            Additional CSS class for the main element (<c>div.modal</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.DialogCssClass">
            <summary>
            Additional CSS class for the dialog (<c>div.modal-dialog</c> element).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.HeaderCssClass">
            <summary>
            Additional header CSS class (<c>div.modal-header</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.BodyCssClass">
            <summary>
            Additional body CSS class (<c>div.modal-body</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.ContentCssClass">
            <summary>
            Additional content CSS class (<c>div.modal-content</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.FooterCssClass">
            <summary>
            Additional footer CSS class (<c>div.modal-footer</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.OnClosed">
            <summary>
            This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete).<br/>
            This can be caused by <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.HideAsync"/>, close-button, <kbd>Esc</kbd> key or other interaction.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.InvokeOnClosedAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.OnClosed"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.OnShown">
            <summary>
            This event is fired when an modal element has been made visible to the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.InvokeOnShownAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxModal.OnShown"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.ShowAsync">
            <summary>
            Opens the modal.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.HideAsync">
            <summary>
            Closes the modal.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.HandleModalHidden">
            <summary>
            Receives notification from JS for <c>hidden.bs.modal</c> event.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxModal.HandleModalShown">
            <summary>
            Receives notification from JS for <c>shown.bs.modal</c> event.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.MessageBoxSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMessageBox"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessageBoxSettings.PrimaryButtonSettings">
            <summary>
            Settings for the dialog primary button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessageBoxSettings.SecondaryButtonSettings">
            <summary>
            Settings for dialog secondary button(s).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessageBoxSettings.ModalSettings">
            <summary>
            Settings for underlying <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxModal"/> component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen">
            <summary>
            Fullscreen behavior for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxModal"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.Disabled">
            <summary>
            Fullscreen mode disabled,
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.Always">
            <summary>
            Always fullscreen modal.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.SmallDown">
            <summary>
            Fullscreen for viewports bellow "small" breakpoint (<c>576px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.MediumDown">
            <summary>
            Fullscreen for viewports bellow "medium" breakpoint (<c>768px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.LargeDown">
            <summary>
            Fullscreen for viewports bellow "large" breakpoint (<c>992px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.ExtraLargeDown">
            <summary>
            Fullscreen for viewports bellow "extra-large" breakpoint (<c>1200px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalFullscreen.XxlDown">
            <summary>
            Fullscreen for viewports bellow "XXL" breakpoint (<c>1400px</c>).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ModalSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxModal"/> component
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.ShowCloseButton">
            <summary>
            Indicates whether the modal shows close button in header.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.CloseButtonIcon">
            <summary>
            Close icon to be used in header.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.CloseOnEscape">
            <summary>
            Indicates whether the modal closes when escape key is pressed.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.Size">
            <summary>
            Size of the modal.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.Fullscreen">
            <summary>
            Fullscreen behavior of the modal.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.UseStaticBackdrop">
            <summary>
            Indicates whether the modal uses a static backdrop.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.Scrollable">
            <summary>
            Allows scrolling the modal body.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.Centered">
            <summary>
            Allows vertical centering of the modal.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.CssClass">
            <summary>
            Additional CSS class for the main element (<c>div.modal</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.DialogCssClass">
            <summary>
            Additional CSS class for the dialog (<c>div.modal-dialog</c> element).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.HeaderCssClass">
            <summary>
            Additional header CSS class (<c>div.modal-header</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.ContentCssClass">
            <summary>
            Additional content CSS class (<c>div.modal-content</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.BodyCssClass">
            <summary>
            Additional body CSS class (<c>div.modal-body</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ModalSettings.FooterCssClass">
            <summary>
            Additional footer CSS class (<c>div.modal-footer</c>).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ModalSize">
            <summary>
            Size for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxModal"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalSize.Small">
            <summary>
            Small. Modal max-width: 300px.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalSize.Regular">
            <summary>
            Medium (default). Modal max-width: 500px.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalSize.Large">
            <summary>
            Large. Modal max-width: 800px.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ModalSize.ExtraLarge">
            <summary>
            Extra large. Modal max-width: 1140px.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxNamedViewList`1">
            <summary>
            List of named-views for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxListLayout`1" />.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxNamedViewList">https://havit.blazor.eu/components/HxNamedViewList</see>
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxNamedViewList`1.InvokeFilterModelChangedAsync(`0)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxNamedViewList`1.FilterModelChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxNamedViewList`1.InvokeOnNamedViewSelectedAsync(Havit.Blazor.Components.Web.Bootstrap.NamedView{`0})">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxNamedViewList`1.OnNamedViewSelected"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode">
            <summary>
            Automation mode for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.Full">
            <summary>
            Scrolls to anchor on <c>firstRender</c> and whenever location changes (<see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged"/>).
            With <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy"/> this mode is suitable only for static pages (where the size/offset of individual sections remains the same from the very beggining).
            Use <see cref="F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.SamePage"/> or <see cref="F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.Manual"/> for when the page contents load asynchronnously and the layout changes.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.Manual">
            <summary>
            Explicit calls to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation.ScrollToCurrentUriFragmentAsync"/> or <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation.ScrollToAnchorAsync(System.String)"/> needed.
            Use this mode with <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy"/> when you need scrollspy to call <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.RefreshAsync"/> to recalculate the target offsets before scrolling (scrollspy does not work properly on scrolled content).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.SamePage">
            <summary>
            Same as <see cref="F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.Manual"/> but scrolls to anchor on <see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged"/> if the page remains the same (just the #fragment portion changed).
            Works for most scenarios when you refresh the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy"/> after data load and then you just need to navigate over the page.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation">
            <summary>
            Temporarily (?) compensates Blazor deficiency in anchor-fragments (scrolling to <c>page#id</c> URLs). Supports navigation with <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy"/> component.
            <see href="https://github.com/dotnet/aspnetcore/issues/8393">GitHub Issue: Blazor 0.8.0: hash routing to named element #8393</see>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxAnchorFragmentNavigation">https://havit.blazor.eu/components/HxAnchorFragmentNavigation</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxAnchorFragmentNavigation.Automation">
            <summary>
            Level of automation.
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.AnchorFragmentNavigationAutomationMode.Full"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/breadcrumb/">Bootstrap 5 Breadcrumb</see> component.<br />
            Indicates the current page’s location within a navigational hierarchy.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxBreadcrumb">https://havit.blazor.eu/components/HxBreadcrumb</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb.ChildContent">
            <summary>
            Child content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb.Divider">
            <summary>
            Breadcrumb divider. Default is <c>/</c>.
            Enter either a character (such as <c>></c>) or use an embedded SVG icon.
            Disable the divider with <c>null</c>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb.IsDividerImage">
            <summary>
            Indicates whether the Divider is an image or a text.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem">
            <summary>
            Item for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumb"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem.Text">
            <summary>
            Item text (usually a name of the page).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem.Href">
            <summary>
            The link of the breadcrumb (a page where the user will be led on click).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem.Active">
            <summary>
            Determines whether the <c>HxBreadcrumbItem</c> is active (use for a page that the user is currently on).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxBreadcrumbItem.ChildContent">
            <summary>
            Itme content.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxNav">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/navs-tabs/">Bootstrap Nav</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxNav">https://havit.blazor.eu/components/HxNav</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNav.Orientation">
            <summary>
            Orientation of the nav.
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.NavOrientation.Horizontal"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNav.Variant">
            <summary>
            The visual variant of the nav items.
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Standard"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNav.Id">
            <summary>
            ID of the nav which can be used for <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.TargetId"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNav.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNav.ChildContent">
            <summary>
            Content of the nav.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/navbar/">Bootstrap 5 Navbar</see> component - responsive navigation header.<br/>
            With support for branding, navigation, and more, including support for the collapse plugin.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxNavbar">https://havit.blazor.eu/components/HxNavbar</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbar.Color">
            <summary>
            Color (background).
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Light"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbar.ColorScheme">
            <summary>
            Color scheme.<br/>
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.NavbarColorScheme.Light"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbar.Expand">
            <summary>
            Responsive expand setting (breakpoint) for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar"/>.<br/>
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.LargeUp"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbar.Id">
            <summary>
            Element ID.
            (Autogenerated GUID if not set explicitly.)
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbar.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbar.ChildContent">
            <summary>
            Content of the navbar.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand">
            <summary>
            Bootstrap <see href="https://getbootstrap.com/docs/5.1/components/navbar/#brand">navbar-brand</see> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand.Href">
            <summary>
            The navigation target. Default is <c>"/"</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbarBrand.ChildContent">
            <summary>
            Content of the navbar-brand.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbarCollapse">
            <summary>
            Collapse section for Bootstrap 5 <see href="https://getbootstrap.com/docs/5.1/components/navbar/">navbar</see> component.
            Derived from <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapse"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbarText">
            <summary>
            Text content for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavbarText.CssClass">
            <summary>
            Any additional CSS class to apply.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbarToggler">
            <summary>
            Bootstrap 5 <see href="https://getbootstrap.com/docs/5.1/components/navbar/#toggler">navbar-toggler</see> component.
            Derived from <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxCollapseToggleButton"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxNavLink">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/navs-tabs/">Bootstrap nav-link</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxNavLink#HxNavLink">https://havit.blazor.eu/components/HxNavLink#HxNavLink</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Href">
            <summary>
            Navigation target.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Text">
            <summary>
            Text of the item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Match">
            <summary>
            URL matching behavior for the underlying <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/>.
            Default is <see cref="F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix"/>.
            You can set the value to <c>null</c> to disable the matching.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.OnClick">
            <summary>
            Raised when the item is clicked.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.InvokeOnClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.OnClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Enabled">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Infrastructure.ICascadeEnabledComponent.Enabled" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.ChildContent">
            <summary>
            Content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/> component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/scrollspy/">Bootstrap Scrollspy</see> component.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxScrollspy">https://havit.blazor.eu/components/HxScrollspy</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.TargetId">
            <summary>
            ID of the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNav"/> or list-group with scrollspy navigation.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.CssClass">
            <summary>
            Scrollspy additional CSS class. Added to main div (.hx-scrollspy).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.ChildContent">
            <summary>
            Content to be spied. Elements with IDs are required (corresponding IDs to be used in <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.Href"/>).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy.RefreshAsync">
            <summary>
            When using scrollspy in conjunction with adding or removing of elements from the DOM (e.g. asynchronnous data load), you’ll need to refresh the scrollspy explicitly.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink">
            <summary>
            Temporary (?) NavLink component to be used with <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxScrollspy"/> where <c>#id</c> anchors are required and <c>page-route#id</c> cannot be used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.Href">
            <summary>
            The navigation target in <c>#id</c> form.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.OnClick">
            <summary>
            Raised when the item is clicked (before the navigation location is changed to <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.Href"/>).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.InvokeOnClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.OnClick"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxScrollspyNavLink.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying <c>&lt;a&gt;</c> element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar">
            <summary>
            Sidebar component - responsive navigation sidebar.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxSidebar">https://havit.blazor.eu/components/HxSidebar</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.HeaderTemplate">
            <summary>
            Sidebar header.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.ItemsTemplate">
            <summary>
            Sidebar items. Use <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.ExpandIcon">
            <summary>
            Icon for expanding the desktop version. Use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate" /> for more specific customization.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.CollapseIcon">
            <summary>
            Icon for collapsing the desktop version. Use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate" /> for more specific customization.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.FooterTemplate">
            <summary>
            Sidebar footer (e.g. logged user, language switch, ...).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate">
            <summary>
            Vertical toggler (desktop version) to be rendered instead of the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.ExpandIcon"/> and <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.CollapseIcon"/> icon.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.Id">
            <summary>
            ID of the root sidebar HTML element.
            (Autogenerated if not set.)
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.Collapsed">
            <summary>
            Indicates whether the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar"/> is collapsed, can be used to alter the state (expand or collapse the sidebar).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.CollapsedChanged">
            <summary>
            Fires when the sidebar is expanded or collapsed.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.InvokeCollapsedChangedAsync(System.Boolean)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.CollapsedChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.MultipleItemsExpansion">
            <summary>
            Whether multiple items can be in expanded state at once.
            If set to <c>false</c>, upon item expansion, all other items are collapsed.
            Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.ResponsiveBreakpoint">
            <summary>
            Breakpoint below which the sidebar switches to mobile version (exclusive).<br/>
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.Medium"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.navId">
            <summary>
            Id of the immediate parent of the contained <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem"/> components.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand">
            <summary>
            Brand for the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.HeaderTemplate"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.BrandName">
            <summary>
            Brand long name.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.LogoTemplate">
            <summary>
            Brand logo.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.BrandNameShort">
            <summary>
            Brand short name.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.ParentSidebar">
            <summary>
            <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar"/> containing the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter">
            <summary>
            Item for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.Text">
            <summary>
            Item text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.Icon">
            <summary>
            Item icon (optional).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.Href">
            <summary>
            Item navigation target.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.Match">
            <summary>
            URL matching behavior for the underlying <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/>.
            Default is <see cref="F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.CssClass">
            <summary>
            Allows you to disable the item with <c>false</c>.
            Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarFooter.ChildContent">
            <summary>
            Sub-items (not intended to be used for any other purpose).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem">
            <summary>
            Item for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.Text">
            <summary>
            Item text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.Icon">
            <summary>
            Item icon (optional).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.Href">
            <summary>
            Item navigation target.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.Match">
            <summary>
            URL matching behavior for the underlying <see cref="T:Microsoft.AspNetCore.Components.Routing.NavLink"/>.
            Default is <see cref="F:Microsoft.AspNetCore.Components.Routing.NavLinkMatch.Prefix"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ExpandOnMatch">
            <summary>
            Set to <c>false</c> if you don't want to expand the sidebar if URL matches.<br/>
            Default is <c>true</c>.
            NOTE: The expansion is only applied on initial load, the sidebar does not track the URL changes (this may change in the future).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.Enabled">
            <summary>
            Allows you to disable the item with <c>false</c>.
            Default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.CssClass">
            <summary>
            Any additional CSS class to add.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ContentTemplate">
            <summary>
            Inner custom content for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ChildContent">
            <summary>
            Sub-items (not intended to be used for any other purpose).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode">
            <summary>
            Render variations for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode.Card">
            <summary>
            Renders the navigation to a card's header <a href="https://getbootstrap.com/docs/5.2/components/card/#navigation">https://getbootstrap.com/docs/5.2/components/card/#navigation</a>
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.NavbarColorScheme">
            <summary>
            Color scheme for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar"/>.<br/>
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.NavbarColorScheme.Light"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand">
            <summary>
            Responsive expand setting (breakpoint) for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNavbar"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.Always">
            <summary>
            Always expanded, never collapses.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.SmallUp">
            <summary>
            Expanded for viewports above "small" breakpoint (<c>576px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.MediumUp">
            <summary>
            Expanded for viewports above "medium" breakpoint (<c>768px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.LargeUp">
            <summary>
            Expanded for viewports above "large" breakpoint (<c>992px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.ExtraLargeUp">
            <summary>
            Expanded for viewports above "extra-large" breakpoint (<c>1200px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.XxlUp">
            <summary>
            Expanded for viewports above "XXL" breakpoint (<c>1400px</c>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavbarExpand.Never">
            <summary>
            Never expanded, always collapsed.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.NavOrientation">
            <summary>
            Orientation for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNav"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavOrientation.Vertical">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/navs-tabs/#vertical">https://getbootstrap.com/docs/5.1/components/navs-tabs/#vertical</see>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.NavVariant">
            <summary>
            Variations for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNav"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Standard">
            <summary>
            Base <c>nav</c>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Tabs">
            <summary>
            Tabs. <see href="https://getbootstrap.com/docs/5.1/components/navs-tabs/#tabs">https://getbootstrap.com/docs/5.1/components/navs-tabs/#tabs</see>
            Remember to set <c>active</c> tab (<see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxNavLink.CssClass"/>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Pills">
            <summary>
            Pills <see href="https://getbootstrap.com/docs/5.1/components/navs-tabs/#pills">https://getbootstrap.com/docs/5.1/components/navs-tabs/#pills</see>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SidebarBrandLogoTemplateContext">
            <summary>
            Context provided to the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarBrand.LogoTemplate" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SidebarBrandLogoTemplateContext.SidebarCollapsed">
            <summary>
            Indicates whether a <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar"/> is collapsed or expanded.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SidebarItemContentTemplateContext">
            <summary>
            Context provided to the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem.ContentTemplate" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SidebarItemContentTemplateContext.ItemExpanded">
            <summary>
            Indicates whether a <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebarItem"/> is collapsed or expanded. Is <c>null</c> when item has no expandable content.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.None">
            <summary>
            Mobile mode disabled, allways render as sidebar.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.Small">
            <summary>
            Mobile for viewports bellow "small" breakpoint (<c>576px</c>, exclusive).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.Medium">
            <summary>
            Mobile for viewports bellow "medium" breakpoint (<c>768px</c>, exclusive).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.Large">
            <summary>
            Mobile for viewports bellow "large" breakpoint (<c>992px</c>, exclusive).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.ExtraLarge">
            <summary>
            Mobile for viewports bellow "extra-large" breakpoint (<c>1200px</c>, exclusive).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.SidebarResponsiveBreakpoint.Xxl">
            <summary>
            Mobile for viewports bellow "XXL" breakpoint (<c>1400px</c>, exclusive).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SidebarTogglerTemplateContext">
            <summary>
            Context provided to the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSidebar.TogglerTemplate" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.SidebarTogglerTemplateContext.SidebarCollapsed">
            <summary>
            Indicates whether a <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSidebar"/> is collapsed or expanded.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/offcanvas/">Bootstrap Offcanvas</see> component (aka Drawer).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxOffcanvas">https://havit.blazor.eu/components/HxOffcanvas</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Title">
            <summary>
            Text for the title in header.
            (Is rendered into <c>&lt;h5 class="offcanvas-title"&gt;</c> - in opposite to <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderTemplate"/> which is rendered directly into <c>offcanvas-header</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderTemplate">
            <summary>
            Content for the header.
            (Is rendered directly into <c>offcanvas-header</c> - in opposite to <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Title"/> which is rendered into <c>&lt;h5 class="offcanvas-title"&gt;</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.BodyTemplate">
            <summary>
            Body content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.FooterTemplate">
            <summary>
            Footer content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Placement">
            <summary>
            Placement of the offcanvas. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasPlacement.End"/> (right).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.RenderMode">
            <summary>
            Determines whether the content is always rendered or only if the offcanvas is open. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode.OpenOnly"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Size">
            <summary>
            Size of the offcanvas. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSize.Regular"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.ShowCloseButton">
            <summary>
            Indicates whether the modal shows close button in header.
            Default value is <c>true</c>.
            Use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.CloseButtonIcon"/> to change shape of the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.CloseOnEscape">
            <summary>
            Indicates whether the offcanvas closes when escape key is pressed.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.CloseButtonIcon">
            <summary>
            Close icon to be used in header.
            If set to <c>null</c>, Bootstrap default close-button will be used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.BackdropEnabled">
            <summary>
            Indicates whether to apply a backdrop on body while offcanvas is open.
            Default value (from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults"/>) is <c>true</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.ScrollingEnabled">
            <summary>
            Indicates whether body (page) scrolling is allowed while offcanvas is open.
            Default value (from <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.Defaults"/>) is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.CssClass">
            <summary>
            Offcanvas additional CSS class. Added to root <c>div</c> (<c>.offcanvas</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HeaderCssClass">
            <summary>
            Additional header CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.BodyCssClass">
            <summary>
            Additional body CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.FooterCssClass">
            <summary>
            Additional footer CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.OnClosed">
            <summary>
            This event is fired when an offcanvas element has been hidden from the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.InvokeOnClosedAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.OnClosed"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.OnShown">
            <summary>
            This event is fired when an offcanvas element has been made visible to the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.InvokeOnShownAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.OnShown"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.ShowAsync">
            <summary>
            Shows the offcanvas.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HideAsync">
            <summary>
            Hides the offcanvas (if opened).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.HandleOffcanvasShown">
            <summary>
            Receives notification from JS for <c>shown.bs.offcanvas</c> event.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode">
            <summary>
            Offcanvas render mode.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode.OpenOnly">
            <summary>
            Offcanvas content is rendered only when it is open.
            Suitable for item-detail, item-edit, etc.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.OffcanvasRenderMode.Always">
            <summary>
            Offcanvas content is always rendered (and hidden with CSS if not open).
            Needed for HxFilterForm with HxChipList.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxOffcanvas"/> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.CloseButtonIcon">
            <summary>
            Close icon to be used in header.
            If set to <c>null</c>, Bootstrap default close-button will be used.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.ShowCloseButton">
            <summary>
            Indicates whether the modal shows close button in header.
            Use <see cref="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.CloseButtonIcon"/> to change shape of the button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.BackdropEnabled">
            <summary>
            Indicates whether to apply a backdrop on body while offcanvas is open.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.Placement">
            <summary>
            Placement of the offcanvas.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.Size">
            <summary>
            Size of the offcanvas.<br/>
            </summary>
            <remarks>
            Consider customization of the offcanvas CSS variables instead of changing the Size application-wide.
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.CloseOnEscape">
            <summary>
            Indicates whether the offcanvas closes when escape key is pressed.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.ScrollingEnabled">
            <summary>
            Indicates whether body (page) scrolling is allowed while offcanvas is open.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.CssClass">
            <summary>
            Offcanvas additional CSS class. Added to root div (<c>.offcanvas</c>).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.HeaderCssClass">
            <summary>
            Additional header CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.BodyCssClass">
            <summary>
            Additional body CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.OffcanvasSettings.FooterCssClass">
            <summary>
            Additional footer CSS class.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/placeholders/">Bootstrap 5 Placeholder</see> component, aka Skeleton.<br/>
            Use loading placeholders for your components or pages to indicate something may still be loading.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxPlaceholder">https://havit.blazor.eu/components/HxPlaceholder</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Columns">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.Columns"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ColumnsSmallUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsSmallUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ColumnsMediumUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsMediumUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ColumnsLargeUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsLargeUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ColumnsExtraLargeUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsExtraLargeUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ColumnsXxlUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsXxlUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Size">
            <summary>
            Size of the placeholder.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.Color">
            <summary>
            Color of the placeholder.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.ChildContent">
            <summary>
            Optional content of the placeholder (usualy not used).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/placeholders/">Bootstrap 5 placeholder</see> in form of a button.<br/>
            Derives from <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxButton"/> (adds <c>placeholder</c> class and changes <c>Enabled</c> default to <c>false</c>).<br/>
            Set the size of the button by using the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.Columns"/> parameter.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.Columns">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.Columns"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ColumnsSmallUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsSmallUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ColumnsMediumUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsMediumUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ColumnsLargeUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsLargeUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ColumnsExtraLargeUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsExtraLargeUp"/>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderButton.ColumnsXxlUp">
            <inheritdoc cref="P:Havit.Blazor.Components.Web.Bootstrap.Layouts.ILayoutColumnComponent.ColumnsXxlUp"/>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer">
            <summary>
            Optional container for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/> components where you can set the animation and some common properties
            for all placeholders contained.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Defaults">
            <summary>
            Application-wide defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer"/> and derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Animation">
            <summary>
            Animation of the placeholders in container.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Size">
            <summary>
            Size of the placeholders (propagated to the child <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/>s).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Color">
            <summary>
            Color of the placeholders (propagated to the child <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/>s).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.ChildContent">
            <summary>
            Content of the placeholder container (put your <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/>s here).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.AdditionalAttributes">
            <summary>
            Additional attributes to be splatted onto an underlying HTML element.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.PlaceholderAnimation">
            <summary>
            Animation of the placeholders (for <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer.Animation"/>).
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.PlaceholderAnimation.None">
            <summary>
            No animation.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.PlaceholderAnimation.Glow">
            <summary>
            Glow animation.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.PlaceholderAnimation.Wave">
            <summary>
            Wave animation.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.PlaceholderContainerSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.PlaceholderContainerSettings.Animation">
            <summary>
            Animation of the placeholders in container.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.PlaceholderContainerSettings.CssClass">
            <summary>
            Additional CSS class for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholderContainer"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.PlaceholderSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.PlaceholderSettings.Size">
            <summary>
            Size of the placeholder.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.PlaceholderSettings.Color">
            <summary>
            Explicit color of the placeholder.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.PlaceholderSettings.CssClass">
            <summary>
            Additional CSS class for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.PlaceholderSize">
            <summary>
            Size for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPlaceholder"/> component.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxProgress">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/progress/">Bootstrap 5 Progress</see> component.<br/>
            A wrapping component for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar" />.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxProgress">https://havit.blazor.eu/components/HxProgress</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgress.ChildContent">
            <summary>
            Content consisting of one or multiple <c>HxProgressBar</c> components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgress.CssClass">
            <summary>
            Additional CSS classes for the progress.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgress.Height">
            <summary>
            Height of all inner progress bars. Default is <c>15px</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgress.MinValue">
            <summary>
            Lowest possible value. Default is <c>0</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgress.MaxValue">
            <summary>
            Highest possible value. Default is <c>100</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgress.Striped">
            <summary>
            If <c>true</c>, applies a stripe via CSS gradient over the progress bar's background color.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgress.Animated">
            <summary>
            If <c>true</c>, stripes are animated right to left via CSS3 animations, stripes are automatically switched on.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar">
            <summary>
            A progress bar to be placed inside <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxProgress" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.ChildContent">
            <summary>
            Inner content of the progress bar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.CssClass">
            <summary>
            Additional CSS classes to be applied to the progress bar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.Value">
            <summary>
            Current value (proportion of the progress bar that is taken up).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.MinValue">
            <summary>
            Lowest possible value. Default is <c>0</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.MaxValue">
            <summary>
            Highest possible value. Default is <c>100</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.Label">
            <summary>
            Text to be displayed on the progress bar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.Color">
            <summary>
            Fill (background) color of the progress bar.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.Striped">
            <summary>
            If <c>true</c>, applies a stripe via CSS gradient over the progress bar's background color.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressBar.Animated">
            <summary>
            If <c>true</c>, stripes are animated right to left via CSS3 animations, stripes are automatically switched on.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator">
            <summary>
            Displays the content of the component as "in progress".<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxProgressIndicator">https://havit.blazor.eu/components/HxProgressIndicator</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.InProgress">
            <summary>
            Indicates whether the content should be displayed as "in progress".
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.Delay">
            <summary>
            Debounce delay in miliseconds. Default is <c>300 ms</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator.ChildContent">
            <summary>
            Wrapped content.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner">
            <summary>
            Bootstrap <see href="https://getbootstrap.com/docs/5.0/components/spinners/">Spinner</see> (usually indicates operation in progress).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxSpinner">https://havit.blazor.eu/components/HxSpinner</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSpinner.Type">
            <summary>
            Spinner type. Spinner type - Border (default) or Grow.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSpinner.Size">
            <summary>
            Spinner size. You can also use custom <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxSpinner.CssClass"/> to change the dimensions as needed.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSpinner.Color">
            <summary>
            Spinner color.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxSpinner.CssClass">
            <summary>
            Additional CSS class to be applied.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ProgressIndicatorSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxProgressIndicator"/> and derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.ProgressIndicatorSettings.Delay">
            <summary>
            Debounce delay in miliseconds.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.SpinnerSize">
            <summary>
            Size for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxSpinner"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.SpinnerType.Border">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/spinners/#border-spinner">https://getbootstrap.com/docs/5.0/components/spinners/#border-spinner</see>
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.SpinnerType.Grow">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/spinners/#growing-spinner">https://getbootstrap.com/docs/5.0/components/spinners/#growing-spinner</see>
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxTab">
            <summary>
            Single tab in <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.TabsRegistration">
            <summary>
            Cascading parameter to register the tab.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.Id">
            <summary>
            ID of the tab (<see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ActiveTabId"/>).
            Autogenerated GUID if not set.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.Title">
            <summary>
            Tab title.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.TitleCssClass">
            <summary>
            CSS class(es) to be applied to the tab title (navigation).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.ContentCssClass">
            <summary>
            Additional CSS class(es) to be applied to the tab content (pane).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.TitleTemplate">
            <summary>
            Tab title template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.Content">
            <summary>
            Content of the tab.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.Visible">
            <summary>
            <c>True</c> for visible tab. Set <c>false</c> when tab should not be visible.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.FormState">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.FormState" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.Enabled">
            <summary>
            When <c>null</c> (default), the Enabled value is received from cascading <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.FormState" />.
            When value is <c>false</c>, input is rendered as disabled.
            To set multiple controls as disabled use <seealso cref="T:Havit.Blazor.Components.Web.HxFormState" />.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.OnTabActivated">
            <summary>
            Rised when the tab is activated.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTab.InvokeOnTabActivatedAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.OnTabActivated"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.OnTabDeactivated">
            <summary>
            Rised when the tab is deactivated (another tab is activates or when <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel"/> is disposed).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTab.InvokeOnTabDeactivatedAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxTab.OnTabDeactivated"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTab.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTab.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel">
            <summary>
            Container for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxTab"/>s for easier implementation of tabbed UI.<br/>
            Encapsulates <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNav"/> (<see cref="F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Tabs"/> variant as default) and <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxNavLink"/>s so you don't have to bother with them explicitly.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxTabPanel">https://havit.blazor.eu/components/HxTabPanel</see>
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.TabsRegistrationCascadingValueName">
            <summary>
            TabsRegistration cascading value name.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.NavVariant">
            <summary>
            The visual variant of the nav items.
            Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.NavVariant.Tabs"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.RenderMode">
            <summary>
            Whether to wrap the tab panel in a card with the tab navigation in the header.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.CardSettings">
            <summary>
            Card settings for the wrapping card.
            Applies only if <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.RenderMode"/> is set to <see cref="F:Havit.Blazor.Components.Web.Bootstrap.TabPanelRenderMode.Card"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ActiveTabId">
            <summary>
            ID of the active tab (@bindable).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ActiveTabIdChanged">
            <summary>
            Raised when ID of the active tab changes.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.InvokeActiveTabIdChangedAsync(System.String)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ActiveTabIdChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.InitialActiveTabId">
            <summary>
            ID of the tab which should be active at the very beginning.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.ChildContent">
            <summary>
            Tabs.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.HandleTabClick(Havit.Blazor.Components.Web.Bootstrap.HxTab)">
            <summary>
            Handle click on tab title to activate tab.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTabPanel.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags">
            <summary>
            Input for entering tags.
            Does not allow duplicate tags.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxInputTags">https://havit.blazor.eu/components/HxInputTags</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Defaults">
            <summary>
            Application-wide defaults for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags"/>.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.GetDefaults">
            <summary>
            Returns application-wide defaults for the component.
            Enables overriding defaults in descandants (use separate set of defaults).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Settings">
            <summary>
            Set of settings to be applied to the component instance (overrides <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Defaults"/>, overriden by individual parameters).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.GetSettings">
            <summary>
            Returns optional set of component settings.
            </summary>
            <remarks>
            Simmilar to <see cref="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.GetDefaults"/>, enables defining wider <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Settings"/> in components descandants (by returning a derived settings class).
            </remarks>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.AllowCustomTags">
            <summary>
            Indicates whether you are restricted to suggested items only (<c>false</c>).
            Default is <c>true</c> (you can type your own tags).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.DataProvider">
            <summary>
            Set to method providing data for tags' suggestions.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.SuggestMinimumLength">
            <summary>
            Minimal number of characters to start suggesting. Default is <c>2</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.SuggestDelay">
            <summary>
            Debounce delay in miliseconds. Default is <c>300 ms</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Delimiters">
            <summary>
            Characters, when typed, divide the current input into separate tags.
            Default is comma, semicolon and space.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ShowAddButton">
            <summary>
            Indicates whether the add-icon (+) should be displayed.
            Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.AddButtonText">
            <summary>
            Optional text for the add-button.
            Displayed only when there are no tags (the <c>Value</c> is empty).
            Default is <c>null</c> (none).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Naked">
            <summary>
            Indicates whether a "naked" variant should be displayed (no border).
            Default is <c>false</c>.
            Consider enabling <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.ShowAddButton"/> when using <c>Naked</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.Placeholder">
            <summary>
            Short hint displayed in the input field before the user enters a value.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.TagBadgeSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge"/> used to render tags.
            Default is <c>Color="<see cref="F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Light"/>"</c> and <c>TextColor="<see cref="F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Dark"/>"</c>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.LabelType">
            <inheritdoc cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputBase`1" />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputSize">
            <summary>
            Size of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupCssClass">
            <summary>
            Custom CSS class to render with input-group span.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupStartText">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupStartTemplate">
            <summary>
            Input-group at the beginning of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupEndText">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.InputGroupEndTemplate">
            <summary>
            Input-group at the end of the input.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.BuildRenderInput(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.TryParseValueFromString(System.String,System.Collections.Generic.List{System.String}@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.FocusAsync">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.RenderChipGenerator(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxInputTags.RenderChipValue(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderDelegate">
            <summary>
            Data provider (delegate) for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags" />.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderRequest">
            <summary>
            Data provider request for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags"/> data.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderRequest.UserInput">
            <summary>
            Current user input for new tag suggestions.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderRequest.CancellationToken">
            <summary>
            The <see cref="T:System.Threading.CancellationToken"/> used to relay cancellation of the request.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderResult">
            <summary>
            Data provider result for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsDataProviderResult.Data">
            <summary>
            The provided items by the request.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxInputTags"/> component.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings.SuggestMinimumLength">
            <summary>
            Minimal number of characters to start suggesting.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings.SuggestDelay">
            <summary>
            Debounce delay in miliseconds.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings.InputSize">
            <summary>
            Input size.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings.Delimiters">
            <summary>
            Characters, when typed, divide the current input into separate tags.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings.ShowAddButton">
            <summary>
            Indicates whether the add-icon (+) should be displayed.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.InputTagsSettings.TagBadgeSettings">
            <summary>
            Settings for the <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxBadge"/> used to render tags.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.ThemeColor">
            <summary>
            Bootstrap theme colors <see href="https://getbootstrap.com/docs/5.0/customize/color/#theme-colors">https://getbootstrap.com/docs/5.0/customize/color/#theme-colors</see>
            (+ Link from predefined button styles <see href="https://getbootstrap.com/docs/5.0/components/buttons/">https://getbootstrap.com/docs/5.0/components/buttons/</see>)
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.ThemeColor.Link">
            <summary>
            To be used for buttons only.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.BootstrapMessengerMessage.Color">
            <summary>
            Color-scheme of the message.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxMessenger">
            <summary>
            <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxToastContainer"/> wrapper for displaying <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxToast"/> messages dispatched through <see cref="T:Havit.Blazor.Components.Web.IHxMessengerService"/>.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxMessenger">https://havit.blazor.eu/components/HxMessenger</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessenger.Position">
            <summary>
            Position of the messages. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.ToastContainerPosition.None"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessenger.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessenger.HandleToastHidden(Havit.Blazor.Components.Web.MessengerMessage)">
            <summary>
            Receive notification from <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxToast"/> when message is hidden.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions">
            <summary>
            Extension methods for <see cref="T:Havit.Blazor.Components.Web.IHxMessengerService"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions.Defaults">
            <summary>
            Default values for extension methods.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions.AddInformation(Havit.Blazor.Components.Web.IHxMessengerService,System.String)">
            <summary>
            Adds and shows an informational message. Message is automatically hidden 5 seconds after showing up.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions.AddInformation(Havit.Blazor.Components.Web.IHxMessengerService,System.String,System.String)">
            <summary>
            Adds and shows an informational message. Message is automatically hidden 5 seconds after showing up.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions.AddWarning(Havit.Blazor.Components.Web.IHxMessengerService,System.String)">
            <summary>
            Adds and shows a warning message.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions.AddWarning(Havit.Blazor.Components.Web.IHxMessengerService,System.String,System.String)">
            <summary>
            Adds and shows a warning message.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions.AddError(Havit.Blazor.Components.Web.IHxMessengerService,System.String)">
            <summary>
            Adds and shows an error message.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions.AddError(Havit.Blazor.Components.Web.IHxMessengerService,System.String,System.String)">
            <summary>
            Adds and shows an error message.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxToast">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/toasts/">Bootstrap Toast</see> component. Not intented to be used in user code, use <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMessenger"/>.
            After first render component never updates.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxToast">https://havit.blazor.eu/components/HxToast</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.JSRuntime">
            <summary>
            JS Runtime.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.Color">
            <summary>
            Color-scheme.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.AutohideDelay">
            <summary>
            Delay in miliseconds to automatically hide toast.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.CssClass">
            <summary>
            Css class to render with toast.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.HeaderIcon">
            <summary>
            Header icon.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.HeaderText">
            <summary>
            Header text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.HeaderTemplate">
            <summary>
            Header template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.ContentText">
            <summary>
            Content (body) text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.ContentTemplate">
            <summary>
            Content (body) template.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.ShowCloseButton">
            <summary>
            Indicates whether to show close button.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.OnToastHidden">
            <summary>
            Fires when toast is hidden (button or autohide).
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxToast.InvokeOnToastHiddenAsync">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxToast.OnToastHidden"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxToast.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxToast.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxToast.HandleToastHidden">
            <summary>
            Receive notification from javascript when message is hidden.
            </summary>
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxToast.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToastContainer.Position">
            <summary>
            Positioning of the toasts on screen.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToastContainer.CssClass">
            <summary>
            Additional CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxToastContainer.ChildContent">
            <summary>
            Toasts to display.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.MessengerServiceExtensionsSettings">
            <summary>
            Defaults for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxMessengerServiceExtensions"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessengerServiceExtensionsSettings.InformationColor">
            <summary>
            Color-scheme of informational messages.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessengerServiceExtensionsSettings.InformationAutohideDelay">
            <summary>
            Default autohide delay for information (in miliseconds). Default is <c>5000</c> ms.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessengerServiceExtensionsSettings.WarningColor">
            <summary>
            Color-scheme of informational messages.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessengerServiceExtensionsSettings.WarningAutohideDelay">
            <summary>
            Default autohide delay for warnings (in miliseconds). Default is <c>null</c> (do not autohide).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessengerServiceExtensionsSettings.ErrorColor">
            <summary>
            Color-scheme of informational messages.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.MessengerServiceExtensionsSettings.ErrorAutohideDelay">
            <summary>
            Default autohide delay for errors (in miliseconds). Default is <c>null</c> (do not autohide).
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxPopover">
            <summary>
            <see href="https://getbootstrap.com/docs/5.1/components/popovers/">Bootstrap Popover</see> component.<br />
            Rendered as a <c>span</c> wrapper to fully support popovers on disabled elements (see example in <see href="https://getbootstrap.com/docs/5.1/components/popovers/#disabled-elements">Disabled elements</see> in the Bootstrap popover documentation).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxPopover">https://havit.blazor.eu/components/HxPopover</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPopover.Title">
            <summary>
            Popover title.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPopover.Content">
            <summary>
            Popover content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPopover.Placement">
            <summary>
            Popover placement. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement.Right"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxPopover.Trigger">
            <summary>
            Popover trigger(s). Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.PopoverTrigger.Click"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxTooltip">
            <summary>
            <see href="https://getbootstrap.com/docs/5.0/components/tooltips/">Bootstrap Tooltip</see> component, activates on hover.<br />
            Rendered as a <c>span</c> wrapper to fully support tooltips on disabled elements (see example in <see href="https://getbootstrap.com/docs/5.0/components/tooltips/#disabled-elements">Disabled elements</see> in the Bootstrap tooltip documentation).<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxTooltip">https://havit.blazor.eu/components/HxTooltip</see>
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTooltip.Text">
            <summary>
            Tooltip text.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTooltip.Placement">
            <summary>
            Tooltip placement. Default is <see cref="F:Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement.Top"/>.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTooltip.Trigger">
            <summary>
            Tooltip trigger(s). Default is <c><see cref="F:Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger.Hover"/> | <see cref="F:Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger.Focus"/></c>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement">
            <summary>
            Placement of the popover for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPopover"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.PopoverPlacement.Auto">
            <summary>
            When is specified, it will dynamically reorient the popover.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.PopoverTrigger">
            <summary>
            Triggers for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxPopover"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement">
            <summary>
            Placement of the tooltip for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxTooltip"/>.
            </summary>
        </member>
        <member name="F:Havit.Blazor.Components.Web.Bootstrap.TooltipPlacement.Auto">
            <summary>
            When is specified, it will dynamically reorient the tooltip.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.TooltipTrigger">
            <summary>
            Triggers for <see cref="T:Havit.Blazor.Components.Web.Bootstrap.HxTooltip"/>.
            </summary>
        </member>
        <member name="T:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1">
            <summary>
            Component to display hierarchy data structure.<br />
            Full documentation and demos: <see href="https://havit.blazor.eu/components/HxTreeView">https://havit.blazor.eu/components/HxTreeView</see>
            </summary>
            <typeparam name="TItem">Type of tree data item.</typeparam>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.Items">
            <summary>
            Collection of hierarchy data to display.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.SelectedItem">
            <summary>
            Selected data item.
            </summary>		
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.SelectedItemChanged">
            <summary>
            Event fires when selected data item changes.
            </summary>		
        </member>
        <member name="M:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.InvokeSelectedDataItemChangedAsync(`0)">
            <summary>
            Triggers the <see cref="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.SelectedItemChanged"/> event. Allows interception of the event in derived components.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.ItemTitleSelector">
            <summary>
            Selector to display item title from data item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.ItemIconSelector">
            <summary>
            Selector to display icon from data item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.ItemInitialExpandedSelector">
            <summary>
            Selector for initial expansion state for data item.<br/>
            Default state is <c>false</c> (collapsed).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.ItemCssClass">
            <summary>
            Item CSS class (same for all items).
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.ItemCssClassSelector">
            <summary>
            Selector for item CSS class.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.ItemChildrenSelector">
            <summary>
            Selector to display children collection for current data item. Children collection should have same type as current item.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.ItemTemplate">
            <summary>
            Template for the item content.
            </summary>
        </member>
        <member name="P:Havit.Blazor.Components.Web.Bootstrap.HxTreeView`1.CssClass">
            <summary>
            Additional CSS class to be applied.
            </summary>
        </member>
    </members>
</doc>
