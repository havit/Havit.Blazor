@namespace Havit.Blazor.Components.Web.Bootstrap

<HxTooltip @ref="_tooltipComponent"
           Text="@Tooltip"
           Placement="@TooltipPlacement"
           CssClass="@TooltipCssClass"
           WrapperCssClass="@GetTooltipWrapperCssClass()">
    <button @ref="buttonElementReference"
            type="@GetButtonType()"
            class="@GetButtonCssClass()"
            @onclick="HandleClick"
  			@onclick:stopPropagation="OnClickStopPropagation"
			@onclick:preventDefault="OnClickPreventDefault"
			disabled="@DisabledEffective"
            form="@FormId"
            @attributes="this.AdditionalAttributes">

        @if ((IconPlacementEffective == ButtonIconPlacement.Start) && ((IconEffective is not null) || SpinnerEffective))
        {
            if (SpinnerEffective)
            {
                <HxSpinner Size="SpinnerSize.Small" />
            }
            else if (IconEffective is not null)
            {
                <HxIcon Icon="IconEffective" CssClass="@IconCssClassEffective" />
            }

            @if (!String.IsNullOrEmpty(Text) || (ChildContent != null))
            {
                <span class="hx-button-icon-text-spacer"></span>
            }
        }


        @Text
        @ChildContent

        @if ((IconPlacementEffective == ButtonIconPlacement.End) && ((IconEffective is not null) || SpinnerEffective))
        {
            @if (!String.IsNullOrEmpty(Text) || (ChildContent != null))
            {
                <span class="hx-button-text-icon-spacer"></span>
            }

            if (SpinnerEffective)
            {
                <HxSpinner Size="SpinnerSize.Small" />
            }
            else if (IconEffective is not null)
            {
                <HxIcon Icon="IconEffective" CssClass="@IconCssClassEffective" />
            }
        }
    </button>
</HxTooltip>