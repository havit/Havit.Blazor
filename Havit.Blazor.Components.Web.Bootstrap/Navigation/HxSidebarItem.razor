@namespace Havit.Blazor.Components.Web.Bootstrap
<CascadingValue Value="this" IsFixed="true">
    <div>
        @if (!HasExpandableContent)
        {
            <HxNavLink Href="@Href"
                   CssClass="@CssClassHelper.Combine(this.DropdownContainer is not null ? "dropdown-item" : null, this.CssClass, "position-relative")"
                   Match="this.Match"
                   Enabled="this.Enabled">

                @* To hide the nav-content in mobile view *@
                <div data-bs-toggle="collapse" data-bs-target="#@ParentSidebar.NavContentElementId" class="stretched-link">
                    <div class="hx-sidebar-item-navlink-content">
                        @if (Icon is not null)
                        {
                            <HxIcon Icon="Icon" />
                        }

                        <span class="hx-sidebar-item-navlink-content-inner">
                            @ContentTemplate
                            @Text
                        </span>
                    </div>

                </div>
            </HxNavLink>
        }
        else
        {
                RenderFragment itemNavLinkContent =
                @<div class="hx-sidebar-item-navlink-content">
                    @if (Icon is not null)
                    {
                        <HxIcon Icon="Icon" />
                    }

                    <span class="hx-sidebar-item-navlink-content-inner">
                        @ContentTemplate
                        @Text
                    </span>

                    <HxIcon Icon="@BootstrapIcon.ChevronRight" CssClass="expand-icon" />
                </div>;

            @if (ParentSidebar.Collapsed)
            {
                <HxDropdown Direction="DropdownDirection.End" CssClass="hx-sidebar-item">
                    <HxNavLink
                           Href="@Href"
                           CssClass="@CssClassHelper.Combine(this.CssClass)"
                           Match="this.Match"
                           Enabled="this.Enabled"
                           role="button"
                           data-bs-toggle="dropdown"
                           aria-expanded="@(this.ShouldBeExpanded ? "true" : "false")">
                        
                           @itemNavLinkContent

                    </HxNavLink>

                    <HxDropdownMenu CssClass="hx-sidebar-subitems">
                        @ChildContent
                    </HxDropdownMenu>

                </HxDropdown>
            }
            else
            {
                <HxNavLink
                        Href="@Href"
                        CssClass="@CssClassHelper.Combine(this.CssClass)"
                        Match="this.Match"
                        Enabled="this.Enabled"
                        role="button"
                        data-bs-toggle="collapse"
                        data-bs-target="@("#" + id)"
                        aria-expanded="@(this.ShouldBeExpanded ? "true" : "false")">

                        @itemNavLinkContent

                </HxNavLink>

                <div class="@CssClassHelper.Combine("hx-sidebar-subitems collapse", this.ShouldBeExpanded ? "show" : null)" id="@id">
                    <nav class="nav hx-sidebar-collapsed-nav">
                        @ChildContent
                    </nav>
                </div>
            }
        }
    </div>
</CascadingValue>