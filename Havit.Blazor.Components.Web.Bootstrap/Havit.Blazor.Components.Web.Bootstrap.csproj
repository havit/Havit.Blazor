<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<TargetFrameworks>net9.0;net8.0</TargetFrameworks>
		<ImplicitUsings>enable</ImplicitUsings>
		<!--  VSTHRD003: Avoid awaiting or returning a Task representing work that was not started within your context as that can lead to deadlocks. -->
		<!--  VSTHRD200: Allow HandleXyClick methods (without Async) -> Suppress 'Use "Async" suffix in names of methods that return an awaitable type' -->
		<NoWarn>$(NoWarn);1591;1701;1702;SA1134;VSTHRD003;VSTHRD200</NoWarn>		
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
	</PropertyGroup>

	<ItemGroup>
		<InternalsVisibleTo Include="Havit.Blazor.Components.Web.Bootstrap.Tests" />
		<InternalsVisibleTo Include="Havit.Blazor.Documentation" />
	</ItemGroup>


	<!-- NuGet -->
	<Import Project="../NuGet.targets" />
	<PropertyGroup>
		<!-- ComponentsPackagesVersion - variable from Directory.Build.props -->
		<PackageVersion>$(ComponentsPackagesVersion)</PackageVersion>
		<Description>HAVIT Blazor Bootstrap Library - Free Bootstrap 5 components for ASP.NET Blazor</Description>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageProjectUrl>https://havit.blazor.eu</PackageProjectUrl>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageReleaseNotes>https://github.com/havit/Havit.Blazor/releases</PackageReleaseNotes>
		<PackageTags>blazor bootstrap components webassembly wasm bootstrap5 BlazorBootstrap BootstrapBlazor</PackageTags>
	</PropertyGroup>
	
	<ItemGroup>
	  <!-- We need this to NOT distribute the file in the nuget. -->
	  <Content Remove="Icons\bootstrap-icons.json" />
	  <None Include="..\README.md">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	  <!-- Source generator needs this file to be present in AdditionalFiles -->
	  <AdditionalFiles Include="Icons\bootstrap-icons.json" />
	</ItemGroup>
	
	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Localization" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Havit.Blazor.Components.Web.Bootstrap.InternalSourceGenerators\Havit.Blazor.Components.Web.Bootstrap.InternalSourceGenerators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
		<ProjectReference Include="..\Havit.Blazor.Components.Web\Havit.Blazor.Components.Web.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Remove="Resources\HxSpinner.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxSidebar.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxMultiSelect.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxListLayout.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxInputNumber.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxInputFileDropZone.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxInputDateRange.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxInputDate.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxGrid.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxCheckbox.zh-CN.de-de.resx" />
	  <EmbeddedResource Remove="Resources\HxMessageBox.zh-CN.de-de.resx" />
	</ItemGroup>

	<Target Name="CopyCustomContent" AfterTargets="AfterBuild">
		<Copy SourceFiles="$(TargetDir)\Havit.Blazor.Components.Web.Bootstrap.xml" DestinationFolder="$(OutDir)\..\..\..\..\Havit.Blazor.Documentation\xmldoc" />
	</Target>

	<!-- Causes CSS file to be included in the bundle of scoped CSS, even though it's not scoped -->
	<Target Name="AttachCssAsScoped" BeforeTargets="ComputeCssScope">
		<ItemGroup>
			<_CssToAttach Include="wwwroot\*.lib.css" />
			<_CssToAttachWithIntermediatePath Include="@(_CssToAttach)">
				<IntermediatePath>$(IntermediateOutputPath)scopedcss\%(Filename).rz.scp.css</IntermediatePath>
			</_CssToAttachWithIntermediatePath>
		</ItemGroup>
		<Copy SourceFiles="@(_CssToAttachWithIntermediatePath)" DestinationFiles="@(_CssToAttachWithIntermediatePath->'%(IntermediatePath)')" />
		<ItemGroup>
			<_ScopedCssCandidateFile Include="@(_CssToAttachWithIntermediatePath->'%(IntermediatePath)')" RelativePath="@(_CssToAttachWithIntermediatePath->'%(Filename).rz.scp.css')" OriginalItemSpec="@(_CssToAttachWithIntermediatePath->'%(Filename)')" />
		</ItemGroup>
	</Target>

</Project>
