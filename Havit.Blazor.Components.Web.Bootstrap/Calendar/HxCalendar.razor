@namespace Havit.Blazor.Components.Web.Bootstrap

@{
	int? tabindexValue = KeyboardNavigation ? 0 : -1;
}

<div class="hx-calendar">
	@if (_renderData != null)
	{
		<div class="hx-calendar-navigation">
			<HxButton Icon="BootstrapIcon.ChevronLeft"
					  CssClass="hx-calendar-navigation-button"
					  Size="ButtonSize.Small"
					  Enabled="@_renderData.PreviousMonthEnabled"
					  OnClickStopPropagation="true"					  
					  OnClick="HandlePreviousMonthClickAsync"
					  tabindex="@tabindexValue" />
			<div class="hx-calendar-month-year-select">
				<select class="form-select form-select-sm" aria-label="Month" tabindex="@tabindexValue" value="@(DisplayMonth.Month - 1)" @onchange="HandleMonthChangeAsync" @onclick:stopPropagation>
					@foreach (var month in _renderData.Months)
					{
						<option @key="@month.Index" value="@month.Index" disabled="@(!month.Enabled)">@month.Name</option>
					}
				</select>
				<select class="form-select form-select-sm" aria-label="Year" tabindex="@tabindexValue" value="@DisplayMonth.Year" @onchange="HandleYearChangeAsync" @onclick:stopPropagation>
					@foreach (int year in _renderData.Years)
					{
						/* not "N" - we do not want thousands separator */
						<option @key="@year" value="@year">@year.ToString()</option>
					}
				</select>
			</div>
			<HxButton Icon="BootstrapIcon.ChevronRight"
					  CssClass="hx-calendar-navigation-button"
					  Size="ButtonSize.Small"
					  Enabled="@_renderData.NextMonthEnabled"
					  OnClickStopPropagation="true"
					  OnClick="HandleNextMonthClickAsync"
					  tabindex="@tabindexValue" />
		</div>

		<div>
			<div class="hx-calendar-day-names">
				@foreach (string dayOfWeek in _renderData.DaysOfWeek)
				{
                    <div @key="@dayOfWeek">@dayOfWeek</div>
				}
			</div>
			@foreach (WeekData week in _renderData.Weeks)
			{
				<div @key="@week.Key" class="hx-calendar-week">
					@foreach (DayData day in week.Days)
					{

						@if (day.ClickEnabled)
						{
							<button type="button" class="@CssClassHelper.Combine("btn hx-calendar-day", day.CssClass)" @key="@day.DayInMonth" @onclick="async () => await HandleDayClickAsync(day)" tabindex="@tabindexValue" @onclick:stopPropagation>
								@day.DayInMonth
							</button>
						}
						else
						{
                            <div class="@CssClassHelper.Combine("hx-calendar-day", day.CssClass)" @key="@day.DayInMonth">
								@day.DayInMonth
							</div>
						}

					}
				</div>
			}
		</div>
	}
</div>