@namespace Havit.Blazor.Components.Web.Bootstrap.Internal
@typeparam TItem

@{
    IconBase icon = IconSelector?.Invoke(Item) ?? null;
    string title = TitleSelector?.Invoke(Item) ?? null;
    string cssClassFromSelector = CssClassSelector?.Invoke(Item) ?? null;
    IEnumerable<TItem> children = ChildrenSelector(Item);
    bool hasChildren = children?.Any() ?? false;
    bool isSelected = Item.Equals(TreeViewContainer.SelectedItem);
}

<div class="@CssClassHelper.Combine("hx-tree-view-item", isSelected ? "selected" : "", CssClass, cssClassFromSelector)" @onclick="@HandleItemClicked" @onclick:stopPropagation="true">
    @for (int i = 0; i < Level; i++)
    {
        <div class="hx-tree-view-item-spacer"></div>
    }
	<div class="hx-tree-view-item-expander-container">
		@if (hasChildren)
		{
			<HxCollapseToggleElement ElementName="div" @onclick:stopPropagation CollapseTarget="@($"#{_collapseId}")" CssClass="hx-tree-view-item-expander">
				<HxIcon Icon="@BootstrapIcon.ChevronDown" />
			</HxCollapseToggleElement>
		}
	</div>
    @if (icon != null)
    {
        <div class="hx-tree-view-item-icon">
            <HxIcon Icon="@icon" />
        </div>
    }
    @if (title is not null)
    {
        <div title="@title" class="hx-tree-view-item-title text-nowrap text-truncate">@title</div>
    }
    @if (ContentTemplate is not null)
    {
	    @ContentTemplate(Item)
    }
</div>

@if (hasChildren)
{
    <HxCollapse Id="@_collapseId"
                CollapseDirection="CollapseDirection.Vertical"
                InitiallyExpanded="IsExpanded ?? false"
                OnHidden="HandleCollapseHiddenAsync"
                OnShown="HandleCollapseShownAsync">

        @foreach (var item in children)
        {
            <HxTreeViewItemInternal @key="item"
                                    TItem="TItem"
                                    Item="item"
                                    TitleSelector="this.TitleSelector"
                                    IconSelector="this.IconSelector"
                                    CssClass="@CssClass"
                                    CssClassSelector="this.CssClassSelector"
                                    InitialExpandedSelector="this.InitialExpandedSelector"
                                    ChildrenSelector="this.ChildrenSelector"
                                    Level="@(Level + 1)"
                                    ContentTemplate="this.ContentTemplate"
                                    OnItemSelected="this.OnItemSelected"
                                    OnItemExpanded="OnItemExpanded"
                                    OnItemCollapsed="OnItemCollapsed" />
        }

    </HxCollapse>
}
