using System.Text;
using Havit.SourceGenerators.StrongApiStringLocalizers.Model;

namespace Havit.SourceGenerators.StrongApiStringLocalizers.SourceBuilders;

/// <summary>
/// Generates source code for service registrations.
/// </summary>
internal class ServiceRegistrationsSourceBuilder
{
	private readonly ServiceCollectionExtensionsData _serviceCollectionExtensionsData;

	public ServiceRegistrationsSourceBuilder(ServiceCollectionExtensionsData serviceCollectionExtensionsData)
	{
		_serviceCollectionExtensionsData = serviceCollectionExtensionsData;
	}

	public string BuildSource()
	{
		var builder = new StringBuilder();
		builder.AppendAutoGeneratedDocumenationCommentLine();
		builder.AppendLine();

		builder.AppendLine($"namespace {_serviceCollectionExtensionsData.RootNamespace};");
		builder.AppendLine();

		builder.AppendLine("using System.CodeDom.Compiler;");
		builder.AppendLine("using Microsoft.Extensions.DependencyInjection;");
		builder.AppendLine("using Microsoft.Extensions.Localization;");
		builder.AppendLine();

		builder.AppendGeneratedCodeAttributeLine();
		builder.AppendLine("public static class ResourcesServiceCollectionExtensions");
		builder.AppendLine("{");
		builder.AppendLine("\tpublic static IServiceCollection AddGeneratedResourceWrappers(this IServiceCollection services)");
		builder.AppendLine("\t{");
		foreach (var resource in _serviceCollectionExtensionsData.Resources.Where(resource => resource.Properties != null))
		{
			builder.AppendLine($"\t\tservices.AddTransient<{resource.TargetLocalizerNamespace}.{resource.LocalizerInterfaceName}, {resource.TargetLocalizerNamespace}.{resource.LocalizerImplementationClassName}>();");
		}
		builder.AppendLine("\t\treturn services;");
		builder.AppendLine("\t}");
		builder.AppendLine("}");

		return builder.ToString();
	}
}