@page "/LineGraphTest"
@using Havit.Blazor.Components.Web.ECharts
@rendermode InteractiveAuto

<LineChart Data="_chartData" SelectedSeriesIds="new List<int>() { 0, 1, 3 }" AutoResize="true" OnAxisPointerUpdate="Handle" />

@(_name1): @(_pointerRevenue.HasValue ? _pointerRevenue : "--") @_unit1
@(_name2): @(_pointerhours.HasValue ? _pointerhours : "--") @_unit2

@code {

	private static string _unit1 = "USD";
	private static string _unit2 = "h";

	private static string _name1 = "Revenue";
	private static string _name2 = "Hours Worked";

	private decimal? _pointerRevenue;
	private decimal? _pointerhours;

	private void Handle(List<EChartAxisPointerUpdatedEventArgs> updates)
	{
		_pointerRevenue = updates.Where(e => e.SeriesIndex == 0).FirstOrDefault()?.GetValue<decimal>();
		_pointerhours = updates.Where(e => e.SeriesIndex == 1).FirstOrDefault()?.GetValue<decimal>();
	}


	List<ChartSeries> _chartData = new List<ChartSeries>
	{
		new ChartSeries
		{
			SeriesId = 0,
			Name = "Revenue",
			Unit = _unit1,
			ValueType = ChartValueType.Money,
			Color = "#4caf50",
			Values = new List<ChartValue>
			{
				new ChartValue("January", 12000),
				new ChartValue("February", 15000),
				new ChartValue("March", 18000),
				new ChartValue("April", 22000),
				new ChartValue("May", 19000)
			}
		},
		new ChartSeries
		{
			SeriesId = 1,
			Name = "Hours Worked",
			Unit = _unit2,
			ValueType = ChartValueType.Hours,
			Color = "#2196f3",
			Values = new List<ChartValue>
			{
				new ChartValue("January", 160),
				new ChartValue("February", 145),
				new ChartValue("March", 170),
				new ChartValue("April", 180),
				new ChartValue("May", 175)
			}
		},
		new ChartSeries
		{
			SeriesId = 3,
			Name = "Hours Worked - 2",
			Unit = _unit2,
			ValueType = ChartValueType.Hours,
			Color = "#DD2222",
			Values = new List<ChartValue>
			{
				new ChartValue("January", 220),
				new ChartValue("February", 175),
				new ChartValue("March", 177),
				new ChartValue("April", 188),
				new ChartValue("May", 111)
			}
		}
	};
}